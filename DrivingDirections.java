public class DrivingDirections {
	public String[] reverse(String[] directions) {
		String[] result = new String[directions.length];
		for (int i = 0; i < result.length; ++i) {
			String address = extractAddress(directions[directions.length - 1 - i]);

			if (i == 0) {
				result[i] = String.format("Start on %s", address);
			} else {
				String turn = extractOppositeTurn(directions[directions.length - i]);

				result[i] = String.format("Turn %s on %s", turn, address);
			}
		}

		return result;
	}

	String extractAddress(String direction) {
		return direction.substring(direction.indexOf("on") + "on ".length());
	}

	String extractOppositeTurn(String direction) {
		return (direction.substring(direction.indexOf(' ')).startsWith(" LEFT")) ? "RIGHT" : "LEFT";
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		DrivingDirections obj;
		String[] answer;
		obj = new DrivingDirections();
		long startTime = System.currentTimeMillis();
		answer = obj.reverse(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		String[] p1;

		// ----- test 0 -----
		p0 = new String[] { "Start on Pirate Street", "Turn LEFT on Viking Avenue", "Turn RIGHT on Ninja Court" };
		p1 = new String[] { "Start on Ninja Court", "Turn LEFT on Viking Avenue", "Turn RIGHT on Pirate Street" };
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "Start on planet Earth" };
		p1 = new String[] { "Start on planet Earth" };
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "Start on Hebron Ave", "Turn RIGHT on CT-2", "Turn LEFT on I-84", "Turn LEFT on I-81",
				"Turn RIGHT on I-80", "Turn LEFT on I-680", "Turn RIGHT on Mission Blvd", "Turn LEFT on I-880",
				"Turn RIGHT on Montague Expressway", "Turn RIGHT on Mission College Blvd" };
		p1 = new String[] { "Start on Mission College Blvd", "Turn LEFT on Montague Expressway", "Turn LEFT on I-880",
				"Turn RIGHT on Mission Blvd", "Turn LEFT on I-680", "Turn RIGHT on I-80", "Turn LEFT on I-81",
				"Turn RIGHT on I-84", "Turn RIGHT on CT-2", "Turn LEFT on Hebron Ave" };
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "Start on  ", "Turn LEFT on  0123456789 - ", "Turn RIGHT on  0123456789 - ",
				"Turn LEFT on                                      ",
				"Turn RIGHT on                                     ", "Turn LEFT on -a0b1c2d3e4f5g6h7i8j9k ",
				"Turn RIGHT on -A0B1C2D3E4F5G6H7I8J9K ", "Turn LEFT on -", "Turn RIGHT on -" };
		p1 = new String[] { "Start on -", "Turn LEFT on -", "Turn RIGHT on -A0B1C2D3E4F5G6H7I8J9K ",
				"Turn LEFT on -a0b1c2d3e4f5g6h7i8j9k ", "Turn RIGHT on                                     ",
				"Turn LEFT on                                      ", "Turn RIGHT on  0123456789 - ",
				"Turn LEFT on  0123456789 - ", "Turn RIGHT on  " };
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[] { "Start on Duke University Rd", "Turn RIGHT on Swift Ave", "Turn LEFT on NC-147",
				"Turn LEFT on I-85", "Turn RIGHT on I-40", "Turn RIGHT on US-52", "Turn LEFT on I-74",
				"Turn RIGHT on I-77", "Turn LEFT on I-64", "Turn RIGHT on Martin Luther King Memorial Bridge",
				"Turn RIGHT on N 3rd St", "Turn LEFT on Cole St", "Turn LEFT on N Broadway",
				"Turn RIGHT on Convention Plz" };
		p1 = new String[] { "Start on Convention Plz", "Turn LEFT on N Broadway", "Turn RIGHT on Cole St",
				"Turn RIGHT on N 3rd St", "Turn LEFT on Martin Luther King Memorial Bridge", "Turn LEFT on I-64",
				"Turn RIGHT on I-77", "Turn LEFT on I-74", "Turn RIGHT on US-52", "Turn LEFT on I-40",
				"Turn LEFT on I-85", "Turn RIGHT on NC-147", "Turn RIGHT on Swift Ave",
				"Turn LEFT on Duke University Rd" };
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
