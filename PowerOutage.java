import java.util.ArrayList;
import java.util.List;

public class PowerOutage {
	static final int MAX_SIZE = 50;

	int maxPathLength;

	public int estimateTimeOut(int[] fromJunction, int[] toJunction, int[] ductLength) {
		@SuppressWarnings("unchecked")
		List<Edge>[] edgeLists = new List[MAX_SIZE];
		for (int i = 0; i < edgeLists.length; ++i) {
			edgeLists[i] = new ArrayList<>();
		}

		for (int i = 0; i < fromJunction.length; ++i) {
			edgeLists[fromJunction[i]].add(new Edge(toJunction[i], ductLength[i]));
		}

		maxPathLength = -1;

		return search(edgeLists, 0, 0) * 2 - maxPathLength;
	}

	int search(List<Edge>[] edgeLists, int pathLength, int node) {
		maxPathLength = Math.max(maxPathLength, pathLength);

		int result = 0;
		for (Edge edge : edgeLists[node]) {
			result += edge.distance + search(edgeLists, pathLength + edge.distance, edge.child);
		}

		return result;
	}

	class Edge {
		int child;
		int distance;

		Edge(int child, int distance) {
			this.child = child;
			this.distance = distance;
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int[] p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		PowerOutage obj;
		int answer;
		obj = new PowerOutage();
		long startTime = System.currentTimeMillis();
		answer = obj.estimateTimeOut(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int[] p2;
		int p3;

		// ----- test 0 -----
		p0 = new int[] { 0 };
		p1 = new int[] { 1 };
		p2 = new int[] { 10 };
		p3 = 10;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 0, 1, 0 };
		p1 = new int[] { 1, 2, 3 };
		p2 = new int[] { 10, 10, 10 };
		p3 = 40;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 0, 0, 0, 1, 4 };
		p1 = new int[] { 1, 3, 4, 2, 5 };
		p2 = new int[] { 10, 10, 100, 10, 5 };
		p3 = 165;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 0, 0, 0, 1, 4, 4, 6, 7, 7, 7, 20 };
		p1 = new int[] { 1, 3, 4, 2, 5, 6, 7, 20, 9, 10, 31 };
		p2 = new int[] { 10, 10, 100, 10, 5, 1, 1, 100, 1, 1, 5 };
		p3 = 281;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new int[] { 0, 0, 0, 0, 0 };
		p1 = new int[] { 1, 2, 3, 4, 5 };
		p2 = new int[] { 100, 200, 300, 400, 500 };
		p3 = 2500;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
