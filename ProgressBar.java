import java.util.Arrays;
import java.util.stream.IntStream;

public class ProgressBar {
  public String showProgress(int[] taskTimes, int tasksCompleted) {
    int completedBlockNum =
        20
            * IntStream.range(0, tasksCompleted).map(i -> taskTimes[i]).sum()
            / Arrays.stream(taskTimes).sum();

    return String.format("%s%s", "#".repeat(completedBlockNum), ".".repeat(20 - completedBlockNum));
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int[] p0, int p1, boolean hasAnswer, String p2) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + p1);
    System.out.println("]");
    ProgressBar obj;
    String answer;
    obj = new ProgressBar();
    long startTime = System.currentTimeMillis();
    answer = obj.showProgress(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p2 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p2);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;
    String p2;

    // ----- test 0 -----
    p0 = new int[] {19, 6, 23, 17};
    p1 = 3;
    p2 = "##############......";
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] {2, 3, 7, 1, 4, 3};
    p1 = 4;
    p2 = "#############.......";
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] {553, 846, 816, 203, 101, 120, 161, 818, 315, 772};
    p1 = 4;
    p2 = "##########..........";
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[] {7, 60, 468, 489, 707, 499, 350, 998, 1000, 716, 457, 104, 597, 583, 396, 862};
    p1 = 2;
    p2 = "....................";
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new int[] {
          419, 337, 853, 513, 632, 861, 336, 594, 94, 367, 336, 297, 966, 627, 399, 433, 846, 859,
          80, 2
        };
    p1 = 19;
    p2 = "###################.";
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
