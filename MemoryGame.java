import java.util.HashSet;
import java.util.Set;

public class MemoryGame {
  public long countSteps(int N, int seed) {
    int[] cards = new int[N * 2];
    for (int i = 0; i < cards.length; ++i) {
      cards[i] = i / 2;
    }

    long state = seed;
    for (int i = cards.length - 1; i >= 1; --i) {
      int j = (int) (state % (i + 1));

      int temp = cards[i];
      cards[i] = cards[j];
      cards[j] = temp;

      state = (state * 1103515245 + 12345) % (1L << 31);
    }

    int result = 0;
    Set<Integer> seen = new HashSet<>();
    int index = 0;
    while (index < cards.length) {
      if (seen.contains(cards[index])) {
        seen.remove(cards[index]);
        ++index;
      } else {
        seen.add(cards[index]);
        ++index;

        if (seen.contains(cards[index])) {
          if (cards[index] != cards[index - 1]) {
            ++result;
          }

          seen.remove(cards[index]);
          ++index;
        } else {
          seen.add(cards[index]);
          ++index;
        }
      }

      ++result;
    }

    return result;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int p1, boolean hasAnswer, long p2) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
    System.out.println("]");
    MemoryGame obj;
    long answer;
    obj = new MemoryGame();
    long startTime = System.currentTimeMillis();
    answer = obj.countSteps(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    long p2;

    // ----- test 0 -----
    p0 = 1;
    p1 = 47;
    p2 = 1L;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 2;
    p1 = 47474747;
    p2 = 2L;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 2;
    p1 = 42;
    p2 = 3L;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 7;
    p1 = 123456;
    p2 = 12L;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 100;
    p1 = 100;
    p2 = 166L;
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
