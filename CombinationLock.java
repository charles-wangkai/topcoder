import java.util.stream.IntStream;

public class CombinationLock {
  public double degreesTurned(int[] combo, int size, int start) {
    return (combo.length * (combo.length + 1) / 2 * size
            + IntStream.range(0, combo.length)
                .map(
                    i -> {
                      int diff = combo[i] - ((i == 0) ? start : combo[i - 1]);
                      if (diff < 0) {
                        diff += size;
                      }

                      return (i % 2 == 0) ? diff : (size - diff);
                    })
                .sum())
        * 360.0
        / size;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int[] p0, int p1, int p2, boolean hasAnswer, double p3) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + p1 + "," + p2);
    System.out.println("]");
    CombinationLock obj;
    double answer;
    obj = new CombinationLock();
    long startTime = System.currentTimeMillis();
    answer = obj.degreesTurned(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = Math.abs(p3 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p3));
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;
    int p2;
    double p3;

    // ----- test 0 -----
    p0 = new int[] {10, 20, 30};
    p1 = 40;
    p2 = 6;
    p3 = 2556.0D;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] {0, 50, 99};
    p1 = 100;
    p2 = 65;
    p3 = 2642.4D;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
    p1 = 10;
    p2 = 5;
    p3 = 79344.0D;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[] {64, 93, 87, 3, 22, 53, 64, 53, 11, 90, 11, 59, 30, 6, 11, 17, 72, 0, 38, 55};
    p1 = 97;
    p2 = 26;
    p3 = 79166.59793814432D;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
