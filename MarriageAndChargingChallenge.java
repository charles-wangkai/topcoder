import java.util.stream.IntStream;

public class MarriageAndChargingChallenge {
  public int solve(int forumLength, int[] relative, int[] greeting) {
    return (int)
        IntStream.range(0, relative.length)
            .filter(i -> check(forumLength, relative, greeting, i))
            .count();
  }

  boolean check(int forumLength, int[] relative, int[] greeting, int startIndex) {
    int battery = 0;
    int index = startIndex;
    for (int i = 0; i < relative.length; ++i) {
      int nextIndex = (index + 1) % relative.length;
      int distance = Math.floorMod(relative[nextIndex] - relative[index], forumLength);
      if (distance == 0) {
        distance = forumLength;
      }
      battery += greeting[index] - distance;
      if (battery < 0) {
        return false;
      }

      index = nextIndex;
    }

    return true;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p1[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p2.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p2[i]);
    }
    System.out.print("}");
    System.out.println("]");
    MarriageAndChargingChallenge obj;
    int answer;
    obj = new MarriageAndChargingChallenge();
    long startTime = System.currentTimeMillis();
    answer = obj.solve(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int[] p1;
    int[] p2;
    int p3;

    // ----- test 0 -----
    p0 = 1000;
    p1 = new int[] {100, 300, 500, 700, 900};
    p2 = new int[] {200, 200, 200, 200, 200};
    p3 = 5;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 1000;
    p1 = new int[] {0, 42};
    p2 = new int[] {1234567, 47};
    p3 = 1;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 1000000000;
    p1 = new int[] {123456, 7890123, 456789012};
    p2 = new int[] {222222222, 333333333, 444444444};
    p3 = 0;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 1;
    p1 = new int[] {0};
    p2 = new int[] {1};
    p3 = 1;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 1000000;
    p1 = new int[] {42, 47};
    p2 = new int[] {6, 999994};
    p3 = 1;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = 5;
    p1 = new int[] {0};
    p2 = new int[] {2};
    p3 = 0;
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
