import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class bloggoSequenceSearch {
  public String[] findPassages(String[] documents, String query) {
    List<Match> matches = new ArrayList<>();
    for (int docId = 0; docId < documents.length; ++docId) {
      for (int startIndex = 0; startIndex < documents[docId].length(); ++startIndex) {
        if (Character.isLetter(documents[docId].charAt(startIndex))
            && (startIndex == 0 || !Character.isLetter(documents[docId].charAt(startIndex - 1)))) {
          for (int endIndex = startIndex; endIndex < documents[docId].length(); ++endIndex) {
            if (Character.isLetter(documents[docId].charAt(endIndex))
                && (endIndex + 1 == documents[docId].length()
                    || !Character.isLetter(documents[docId].charAt(endIndex + 1)))) {
              String passageText = documents[docId].substring(startIndex, endIndex + 1);
              if (isMatched(query, passageText)) {
                matches.add(new Match(docId, startIndex, passageText));
              }
            }
          }
        }
      }
    }

    return matches.stream()
        .sorted(
            Comparator.comparing((Match match) -> match.passageText.length())
                .thenComparing(match -> match.docId)
                .thenComparing(match -> match.startIndex))
        .limit(5)
        .map(match -> String.format("%d %d [%s]", match.docId, match.startIndex, match.passageText))
        .toArray(String[]::new);
  }

  boolean isMatched(String query, String passageText) {
    String[] keywords = query.split("\\.\\.\\.");
    String[] words = passageText.split("\\W+");

    if (!words[0].equalsIgnoreCase(keywords[0])
        || !words[words.length - 1].equalsIgnoreCase(keywords[keywords.length - 1])) {
      return false;
    }

    if (keywords.length == 1) {
      return words.length == 1;
    }

    int keywordIndex = 0;
    for (String word : words) {
      if (keywordIndex < keywords.length && word.equalsIgnoreCase(keywords[keywordIndex])) {
        ++keywordIndex;
      }
    }

    return keywordIndex == keywords.length;
  }

  class Match {
    int docId;
    int startIndex;
    String passageText;

    Match(int docId, int startIndex, String passageText) {
      this.docId = docId;
      this.startIndex = startIndex;
      this.passageText = passageText;
    }
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, String p1, boolean hasAnswer, String[] p2) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}" + "," + "\"" + p1 + "\"");
    System.out.println("]");
    bloggoSequenceSearch obj;
    String[] answer;
    obj = new bloggoSequenceSearch();
    long startTime = System.currentTimeMillis();
    answer = obj.findPassages(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p2.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print("\"" + p2[i] + "\"");
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + answer[i] + "\"");
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p2.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (!answer[i].equals(p2[i])) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String p1;
    String[] p2;

    // ----- test 0 -----
    p0 =
        new String[] {
          "But in a larger sense we can not dedicate --",
          "we can not consecrate -- we can not hallow this",
          "ground. The brave men, living and dead, who",
          "struggled, here, have consecrated it far above",
          "our poor power to add or detract. The world will",
          "little note, nor long remember, what we say here,",
          "but can never forget what they did here. It is",
          "for us, the living, rather to be dedicated here",
          "to the unfinished work which they have, thus",
          "far, so nobly carried on. It is rather for us",
          "to be here dedicated to the great task remaining",
          "before us -- that from these honored dead we take",
          "increased devotion to that cause for which they",
          "here gave the last full measure of devotion --",
          "that we here highly resolve that these dead",
          "shall not have died in vain; that this nation",
          "shall have a new birth of freedom; and that",
          "this government of the people, by the people,",
          "for the people, shall not perish from the earth."
        };
    p1 = "the...People";
    p2 =
        new String[] {
          "17 19 [the people]",
          "17 34 [the people]",
          "18 4 [the people]",
          "17 19 [the people, by the people]"
        };
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 =
        new String[] {
          "But in a larger sense we can not dedicate --",
          "we can not consecrate -- we can not hallow this",
          "ground. The brave men, living and dead, who",
          "struggled, here, have consecrated it far above",
          "our poor power to add or detract. The world will",
          "little note, nor long remember, what we say here,",
          "but can never forget what they did here. It is",
          "for us, the living, rather to be dedicated here",
          "to the unfinished work which they have, thus",
          "far, so nobly carried on. It is rather for us",
          "to be here dedicated to the great task remaining",
          "before us -- that from these honored dead we take",
          "increased devotion to that cause for which they",
          "here gave the last full measure of devotion --",
          "that we here highly resolve that these dead",
          "shall not have died in vain; that this nation",
          "shall have a new birth of freedom; and that",
          "this government of the people, by the people,",
          "for the people, shall not perish from the earth."
        };
    p1 = "Shall...The";
    p2 = new String[] {"18 16 [shall not perish from the]"};
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 =
        new String[] {
          "But in a larger sense we can not dedicate --",
          "we can not consecrate -- we can not hallow this",
          "ground. The brave men, living and dead, who",
          "struggled, here, have consecrated it far above",
          "our poor power to add or detract. The world will",
          "little note, nor long remember, what we say here,",
          "but can never forget what they did here. It is",
          "for us, the living, rather to be dedicated here",
          "to the unfinished work which they have, thus",
          "far, so nobly carried on. It is rather for us",
          "to be here dedicated to the great task remaining",
          "before us -- that from these honored dead we take",
          "increased devotion to that cause for which they",
          "here gave the last full measure of devotion --",
          "that we here highly resolve that these dead",
          "shall not have died in vain; that this nation",
          "shall have a new birth of freedom; and that",
          "this government of the people, by the people,",
          "for the people, shall not perish from the earth."
        };
    p1 = "wE...nOT";
    p2 =
        new String[] {
          "0 22 [we can not]",
          "1 0 [we can not]",
          "1 25 [we can not]",
          "1 0 [we can not consecrate -- we can not]"
        };
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "But in a larger sense we can not dedicate --",
          "we can not consecrate -- we can not hallow this",
          "ground. The brave men, living and dead, who",
          "struggled, here, have consecrated it far above",
          "our poor power to add or detract. The world will",
          "little note, nor long remember, what we say here,",
          "but can never forget what they did here. It is",
          "for us, the living, rather to be dedicated here",
          "to the unfinished work which they have, thus",
          "far, so nobly carried on. It is rather for us",
          "to be here dedicated to the great task remaining",
          "before us -- that from these honored dead we take",
          "increased devotion to that cause for which they",
          "here gave the last full measure of devotion --",
          "that we here highly resolve that these dead",
          "shall not have died in vain; that this nation",
          "shall have a new birth of freedom; and that",
          "this government of the people, by the people,",
          "for the people, shall not perish from the earth."
        };
    p1 = "we...can...not";
    p2 =
        new String[] {
          "0 22 [we can not]",
          "1 0 [we can not]",
          "1 25 [we can not]",
          "1 0 [we can not consecrate -- we can not]"
        };
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new String[] {
          "B A b B B A b a A B b b b a a a B a A b a B B b b ",
          "A B b b A a A b A A a b b A A a A a A b A a A B b ",
          "B B a A a a A A A b A b b a a B B b a A a A b a A ",
          "a b b b b A B a A A A A a b A b A A B a A b b a A ",
          "A b a A b B B a b A A A A B A A B a A B a b b b B ",
          "A A A b b a a a A b b b a A A b a B a a B b B a b ",
          "B A B A a b A B a B b A b B b b A B A A a B A b B ",
          "A A b B a a b B b a b a A A A B A b b b b A b b A ",
          "B B A A B B A b a a b a a A B B A A B B A B b A b ",
          "A a A b B B b A a b b B A a B b b A B b a a a b b ",
          "B B a b A A a b a A a A a B B A B A A a B B b a B ",
          "B b B B a B A B b B B a A a a a b b B a A A b a A ",
          "b B a a a B b a A a A b a a A b A B b a B a b A A ",
          "A A b B b A a B a a a b B A b B B a b B b b b B B ",
          "b B a A A A B B b b b b a b B B a a a b B b A A B ",
          "a B A a a a a A A B A A B b a b A A a A a a B B B ",
          "B B A B b B B a b B A B A b b A b A B A A b A a b ",
          "B A A A b A B a b b b a b b b a a A A b A b a A b ",
          "A a B B B A B b b A B a B a A b B b b a B A B " + "b a ",
          "B a A A B a a b b B b B A A a A b a a b b b a B b ",
          "a a b A B a b B B B A A B a B b B A b B b a b A B ",
          "A a a b a A b B A b B a A B a a A B a A b a b a B ",
          "A b A b b A b b a B b a A a b A a A A A A a A b A ",
          "a B B A a B B a b B b a B b A a B B B a B a a b a ",
          "a a A b B B B a A B a B a A a B a a B b A B b b B ",
          "A a A B A A A b b B A A a A b B b a A b B A b b A ",
          "A A a a b B A b a b a A A A B B b B A a A B A B b ",
          "b a b B a A B a a b B B B A b a A a A A A a a A b ",
          "a b a a B a B b a B B A A b a B A B b A b a A a a ",
          "b a a B a a b A B A a b a B A B b b B A b A a b a ",
          "a B b B a a a A b B B A b b b A A B A b b b B b A ",
          "B B a A b b a B B b A a a A B B A a A b a a B A A ",
          "a A a A b b B B a B B b a b b A B a B A a a b a A ",
          "A B A A a a b A b A B B A b A B b B B a a a A b a ",
          "b A B b b b a b b A A a A B b B B A a b b B a b a ",
          "A B B b b a a a B A B b b a b A a a B A b B A B B ",
          "A b B b B a b a B B B B A a A a a B B b b a b A A ",
          "B B a a b B a A b A A A a A a b b b a B " + "B A a B a ",
          "A B a a B A B B a B B b b a B a b b A A B b A A b ",
          "B b a a A a B b B a b A B B B A b B b A A B a a B ",
          "B b b A B a a b a B a b A A b B a b b a A B B a A ",
          "A A b A a a a a B B b b b b A B A B B a B b A a a ",
          "B B B A b A a a a B a B b b B b a A a b b A B a B ",
          "A B b b B a b A b B b A B A A A a B B a A b b b B ",
          "B a A B A b b A b b a A A b b b A B a b B a b A b ",
          "B a a B a B A b B A b b a b B a b a A b b a A b B ",
          "a b b a A b A a A B B a b B B a A B A a b B a a a ",
          "b b a A a a A a a B b A B a A B B a A a B A b A a ",
          "b b B b B a a b a B B A B b A b A a b b B A B b a ",
          "a b a B a A B a A A A A A a B a A A a B a b b b b "
        };
    p1 = "a...b...a...b...a...a...b...b...a...a...b...b";
    p2 =
        new String[] {
          "45 24 [a b B a b a A b b a A b B]",
          "8 12 [A b a a b a a A B B A A B B]",
          "18 18 [A B a B a A b B b b a B A B b]",
          "40 16 [a B a b A A b B a b b a A B B]",
          "47 16 [a B b A B a A B B a A a B A b]"
        };
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 =
        new String[] {
          "this government of the people, by the people,",
          "for the people, shall not perish from the earth."
        };
    p1 = "people";
    p2 = new String[] {"0 23 [people]", "0 38 [people]", "1 8 [people]"};
    all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
