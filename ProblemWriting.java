public class ProblemWriting {
  public String myCheckData(String dotForm) {
    int length = dotForm.length();
    if (length < 1 || length > 25) {
      return "dotForm must contain between 1 and 25 characters, inclusive.";
    }

    if (!Character.isDigit(dotForm.charAt(0))) {
      return buildMessage(0);
    }

    boolean operatorOrNumber = true;
    for (int i = 1; i < dotForm.length(); ++i) {
      char c = dotForm.charAt(i);

      if ((operatorOrNumber && "+-*/".indexOf(c) != -1)
          || (!operatorOrNumber && Character.isDigit(c))) {
        operatorOrNumber ^= true;
      } else if (c != '.') {
        return buildMessage(i);
      }
    }

    return Character.isDigit(dotForm.charAt(length - 1)) ? "" : buildMessage(length);
  }

  String buildMessage(int n) {
    return String.format("dotForm is not in dot notation, check character %d.", n);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
    System.out.println("]");
    ProblemWriting obj;
    String answer;
    obj = new ProblemWriting();
    long startTime = System.currentTimeMillis();
    answer = obj.myCheckData(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p1 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p1);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    String p1;

    // ----- test 0 -----
    p0 = "3+5";
    p1 = "";
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "9..+.5...*....3";
    p1 = "";
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "5.3+4";
    p1 = "dotForm is not in dot notation, check character 2.";
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = "9*9*9*9*9*9*9*9*9*9*9*9*9*9";
    p1 = "dotForm must contain between 1 and 25 characters, inclusive.";
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = "3.........../...........4";
    p1 = "";
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
