import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Thesaurus {
  public String[] edit(String[] entry) {
    List<Set<String>> groups =
        Arrays.stream(entry)
            .map(e -> Arrays.stream(e.split(" ")).collect(Collectors.toSet()))
            .collect(Collectors.toList());
    List<Set<String>> combined = new ArrayList<>();
    for (Set<String> group : groups) {
      while (true) {
        boolean changed = false;
        for (Set<String> comb : combined) {
          if (canCombine(comb, group)) {
            combined.remove(comb);
            group = combine(comb, group);
            changed = true;

            break;
          }
        }

        if (!changed) {
          combined.add(group);

          break;
        }
      }
    }

    return combined.stream()
        .map(g -> g.stream().sorted().collect(Collectors.joining(" ")))
        .sorted()
        .toArray(String[]::new);
  }

  boolean canCombine(Set<String> group1, Set<String> group2) {
    return group1.stream().filter(group2::contains).count() >= 2;
  }

  Set<String> combine(Set<String> group1, Set<String> group2) {
    return Stream.concat(group1.stream(), group2.stream()).collect(Collectors.toSet());
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, boolean hasAnswer, String[] p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    Thesaurus obj;
    String[] answer;
    obj = new Thesaurus();
    long startTime = System.currentTimeMillis();
    answer = obj.edit(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p1.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print("\"" + p1[i] + "\"");
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + answer[i] + "\"");
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p1.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (!answer[i].equals(p1[i])) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String[] p1;

    // ----- test 0 -----
    p0 = new String[] {"ape monkey wrench", "wrench twist strain"};
    p1 = new String[] {"ape monkey wrench", "strain twist wrench"};
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[] {"ape monkey wrench", "wrench twist strain", "monkey twist frugue"};
    p1 = new String[] {"ape monkey wrench", "frugue monkey twist", "strain twist wrench"};
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new String[] {"ape monkey wrench", "wrench twist strain", "monkey twist frugue strain"};
    p1 = new String[] {"ape frugue monkey strain twist wrench"};
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "point run score", "point dot", "cut run tear score", "cut valley", "cute pretty"
        };
    p1 = new String[] {"cut point run score tear", "cut valley", "cute pretty", "dot point"};
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
