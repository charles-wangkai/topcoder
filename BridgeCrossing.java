import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class BridgeCrossing {
	public int minTime(int[] times) {
		List<Integer> rest = Arrays.stream(times).sorted().boxed().collect(Collectors.toList());
		int result = 0;
		while (!rest.isEmpty()) {
			int size = rest.size();

			if (size == 1) {
				result += rest.remove(rest.size() - 1);
			} else if (size == 2) {
				result += rest.remove(rest.size() - 1);
				rest.remove(rest.size() - 1);
			} else if (size == 3) {
				result += rest.remove(rest.size() - 1);
				result += rest.remove(rest.size() - 1);
				result += rest.remove(rest.size() - 1);
			} else {
				result += rest.remove(rest.size() - 1);
				result += rest.get(0);
				result += Math.min(rest.get(1) * 2, rest.get(0) + rest.remove(rest.size() - 1));
			}
		}

		return result;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		BridgeCrossing obj;
		int answer;
		obj = new BridgeCrossing();
		long startTime = System.currentTimeMillis();
		answer = obj.minTime(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int p1;

		// ----- test 0 -----
		p0 = new int[] { 1, 2, 5, 10 };
		p1 = 17;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 1, 2, 3, 4, 5 };
		p1 = 16;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 100 };
		p1 = 100;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 1, 2, 3, 50, 99, 100 };
		p1 = 162;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new int[] { 99, 13, 67, 32, 5, 17 };
		p1 = 202;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
