public class Twain {
	public String getNewSpelling(int year, String phrase) {
		String[] words = phrase.split(" ", -1);

		for (int i = 0; i < words.length; ++i) {
			if (year >= 1) {
				if (words[i].startsWith("x")) {
					words[i] = String.format("z%s", words[i].substring(1));
				}

				words[i] = words[i].replaceAll("x", "ks");
			}

			if (year >= 2) {
				words[i] = words[i].replaceAll("y", "i");
			}

			if (year >= 3) {
				words[i] = words[i].replaceAll("ce", "se").replaceAll("ci", "si");
			}

			if (year >= 4) {
				while (words[i].contains("ck")) {
					words[i] = words[i].replaceAll("ck", "k");
				}
			}

			if (year >= 5) {
				if (words[i].startsWith("sch")) {
					words[i] = String.format("sk%s", words[i].substring(3));
				}

				words[i] = words[i].replaceAll("chr", "kr");

				words[i] = words[i].replaceAll("c(?!h)", "k");
			}

			if (year >= 6) {
				if (words[i].startsWith("kn")) {
					words[i] = String.format("n%s", words[i].substring(2));
				}
			}

			if (year >= 7) {
				while (words[i].matches(".*([^aeiou])\\1.*")) {
					words[i] = words[i].replaceAll("([^aeiou])\\1", "$1");
				}
			}
		}

		return String.join(" ", words);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, String p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "\"" + p1 + "\"");
		System.out.println("]");
		Twain obj;
		String answer;
		obj = new Twain();
		long startTime = System.currentTimeMillis();
		answer = obj.getNewSpelling(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		String p1;
		String p2;

		// ----- test 0 -----
		p0 = 1;
		p1 = "i fixed the chrome xerox by the cyclical church";
		p2 = "i fiksed the chrome zeroks by the cyclical church";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 2;
		p1 = "i fixed the chrome xerox by the cyclical church";
		p2 = "i fiksed the chrome zeroks bi the ciclical church";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 0;
		p1 = "this is unchanged";
		p2 = "this is unchanged";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 7;
		p1 = "sch kn x xschrx cknnchc cyck xxceci";
		p2 = "sk n z zskrks nchk sik zksesi";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = 7;
		p1 = "  concoction   convalescence   cyclical   cello   ";
		p2 = "  konkoktion   konvalesense   siklikal   selo   ";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = 7;
		p1 = "";
		p2 = "";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 6 -----
		p0 = 7;
		p1 = "cck xzz aaaaa";
		p2 = "k z aaaaa";
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
