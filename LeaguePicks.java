import java.util.ArrayList;
import java.util.List;

public class LeaguePicks {
  public int[] returnPicks(int position, int friends, int picks) {
    List<Integer> result = new ArrayList<>();
    int current = 1;
    int delta = 1;
    for (int i = 0; i < picks; ++i) {
      if (current == position) {
        result.add(i + 1);
      }

      int next = current + delta;
      if (next >= 1 && next <= friends) {
        current = next;
      } else {
        delta *= -1;
      }
    }

    return result.stream().mapToInt(Integer::intValue).toArray();
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int p1, int p2, boolean hasAnswer, int[] p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
    System.out.println("]");
    LeaguePicks obj;
    int[] answer;
    obj = new LeaguePicks();
    long startTime = System.currentTimeMillis();
    answer = obj.returnPicks(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p3.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print(p3[i]);
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(answer[i]);
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p3.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (answer[i] != p3[i]) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;
    int[] p3;

    // ----- test 0 -----
    p0 = 3;
    p1 = 6;
    p2 = 15;
    p3 = new int[] {3, 10, 15};
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 1;
    p1 = 1;
    p2 = 10;
    p3 = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 1;
    p1 = 2;
    p2 = 39;
    p3 = new int[] {1, 4, 5, 8, 9, 12, 13, 16, 17, 20, 21, 24, 25, 28, 29, 32, 33, 36, 37};
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 5;
    p1 = 11;
    p2 = 100;
    p3 = new int[] {5, 18, 27, 40, 49, 62, 71, 84, 93};
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
