import java.util.Arrays;

public class Pool {
  static final int[] HALF_INDICES = {1, 2, 6, 8, 11, 13, 14};

  public int rackMoves(int[] triangle) {
    int index8 = 0;
    while (triangle[index8] != 8) {
      ++index8;
    }

    int result = 0;
    if (index8 != 4) {
      swap(triangle, index8, 4);
      ++result;
    }

    int solidNum = (int) Arrays.stream(HALF_INDICES).filter(i -> triangle[i] <= 7).count();
    result += Math.min(solidNum, HALF_INDICES.length - solidNum);

    return result;
  }

  void swap(int[] triangle, int index1, int index2) {
    int temp = triangle[index1];
    triangle[index1] = triangle[index2];
    triangle[index2] = temp;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}");
    System.out.println("]");
    Pool obj;
    int answer;
    obj = new Pool();
    long startTime = System.currentTimeMillis();
    answer = obj.rackMoves(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p1);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p1;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;

    // ----- test 0 -----
    p0 = new int[] {6, 12, 14, 1, 8, 2, 11, 3, 9, 4, 7, 13, 5, 15, 10};
    p1 = 0;
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] {2, 10, 7, 1, 8, 12, 6, 11, 4, 9, 13, 3, 14, 15, 5};
    p1 = 2;
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] {8, 15, 9, 4, 10, 6, 11, 3, 14, 7, 2, 1, 13, 12, 5};
    p1 = 3;
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[] {15, 5, 8, 13, 2, 14, 10, 3, 4, 6, 7, 9, 1, 12, 11};
    p1 = 4;
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = new int[] {1, 5, 15, 6, 10, 9, 11, 13, 7, 4, 3, 8, 2, 12, 14};
    p1 = 3;
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
