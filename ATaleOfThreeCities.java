import java.util.stream.IntStream;

public class ATaleOfThreeCities {
  public double connect(int[] ax, int[] ay, int[] bx, int[] by, int[] cx, int[] cy) {
    double ab = computeMinDistance(ax, ay, bx, by);
    double bc = computeMinDistance(bx, by, cx, cy);
    double ca = computeMinDistance(cx, cy, ax, ay);

    return Math.min(Math.min(ab + bc, bc + ca), ca + ab);
  }

  double computeMinDistance(int[] x1, int[] y1, int[] x2, int[] y2) {
    return IntStream.range(0, x1.length)
        .mapToDouble(
            i ->
                IntStream.range(0, x2.length)
                    .mapToDouble(
                        j ->
                            Math.sqrt(
                                (x1[i] - x2[j]) * (x1[i] - x2[j])
                                    + (y1[i] - y2[j]) * (y1[i] - y2[j])))
                    .min()
                    .getAsDouble())
        .min()
        .getAsDouble();
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum,
      int[] p0,
      int[] p1,
      int[] p2,
      int[] p3,
      int[] p4,
      int[] p5,
      boolean hasAnswer,
      double p6) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p1[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p2.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p2[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p3.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p3[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p4.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p4[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p5.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p5[i]);
    }
    System.out.print("}");
    System.out.println("]");
    ATaleOfThreeCities obj;
    double answer;
    obj = new ATaleOfThreeCities();
    long startTime = System.currentTimeMillis();
    answer = obj.connect(p0, p1, p2, p3, p4, p5);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p6);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = Math.abs(p6 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p6));
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int[] p1;
    int[] p2;
    int[] p3;
    int[] p4;
    int[] p5;
    double p6;

    // ----- test 0 -----
    p0 = new int[] {0, 0, 0};
    p1 = new int[] {0, 1, 2};
    p2 = new int[] {2, 3};
    p3 = new int[] {1, 1};
    p4 = new int[] {1, 5};
    p5 = new int[] {3, 28};
    p6 = 3.414213562373095D;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, p5, true, p6) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] {-2, -1, 0, 1, 2};
    p1 = new int[] {0, 0, 0, 0, 0};
    p2 = new int[] {-2, -1, 0, 1, 2};
    p3 = new int[] {1, 1, 1, 1, 1};
    p4 = new int[] {-2, -1, 0, 1, 2};
    p5 = new int[] {2, 2, 2, 2, 2};
    p6 = 2.0D;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, p5, true, p6) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] {4, 5, 11, 21, 8, 10, 3, 9, 5, 6};
    p1 = new int[] {12, 8, 9, 12, 2, 3, 5, 7, 10, 13};
    p2 = new int[] {34, 35, 36, 41, 32, 39, 41, 37, 39, 50};
    p3 = new int[] {51, 33, 41, 45, 48, 22, 33, 51, 41, 40};
    p4 = new int[] {86, 75, 78, 81, 89, 77, 83, 88, 99, 77};
    p5 = new int[] {10, 20, 30, 40, 50, 60, 70, 80, 90, 100};
    p6 = 50.323397776611024D;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, p5, true, p6) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
