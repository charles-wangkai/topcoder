public class BouncingBall {
  public double getPosition(int g, int h, int p, int t) {
    double a = g / 100.0;

    boolean downOrUp = true;
    double height = h;
    double time = t;
    while (true) {
      double maxTime = Math.sqrt(height * 2 / a);
      if (downOrUp) {
        if (time <= maxTime) {
          return height - a * time * time / 2;
        }

        height *= (1 - p / 100.0);
      } else {
        if (time <= maxTime) {
          return a * maxTime * time - a * time * time / 2;
        }
      }

      time -= maxTime;
      downOrUp ^= true;
    }
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int p1, int p2, int p3, boolean hasAnswer, double p4) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + p3);
    System.out.println("]");
    BouncingBall obj;
    double answer;
    obj = new BouncingBall();
    long startTime = System.currentTimeMillis();
    answer = obj.getPosition(p0, p1, p2, p3);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p4);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = Math.abs(p4 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p4));
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;
    int p3;
    double p4;

    // ----- test 0 -----
    p0 = 981;
    p1 = 10;
    p2 = 0;
    p3 = 1;
    p4 = 5.095D;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 981;
    p1 = 10;
    p2 = 0;
    p3 = 2;
    p4 = 6.408564143658009D;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 981;
    p1 = 10;
    p2 = 0;
    p3 = 47;
    p4 = 1.5951180154118365D;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 981;
    p1 = 10;
    p2 = 8;
    p3 = 2;
    p4 = 6.081311391188509D;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 981;
    p1 = 10;
    p2 = 8;
    p3 = 47;
    p4 = 0.7952075484286876D;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = 1000;
    p1 = 10;
    p2 = 10;
    p3 = 50;
    p4 = 0.036079462357220954D;
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
