import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class Poetry {
  public String rhymeScheme(String[] poem) {
    Map<String, Integer> endingToCode = new HashMap<>();
    int[] codes = new int[poem.length];
    for (int i = 0; i < codes.length; ++i) {
      String[] words =
          Arrays.stream(poem[i].toLowerCase().split(" "))
              .filter(word -> !word.isEmpty())
              .toArray(String[]::new);

      if (words.length == 0) {
        codes[i] = -1;
      } else {
        String ending = findEnding(words[words.length - 1]);
        endingToCode.putIfAbsent(ending, endingToCode.size());
        codes[i] = endingToCode.get(ending);
      }
    }

    return Arrays.stream(codes)
        .mapToObj(
            code ->
                (code == -1) ? ' ' : ((code < 26) ? (char) (code + 'a') : (char) (code - 26 + 'A')))
        .map(String::valueOf)
        .collect(Collectors.joining());
  }

  String findEnding(String word) {
    int index = word.length() - 1;
    while ("aeiou".indexOf(word.charAt(index)) == -1
        && (index == word.length() - 1 || word.charAt(index) != 'y')) {
      --index;
    }

    while (index >= 1
        && ("aeiou".indexOf(word.charAt(index - 1)) != -1
            || (index != 1 && word.charAt(index - 1) == 'y'))) {
      --index;
    }

    return word.substring(index);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, boolean hasAnswer, String p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    Poetry obj;
    String answer;
    obj = new Poetry();
    long startTime = System.currentTimeMillis();
    answer = obj.rhymeScheme(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p1 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p1);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String p1;

    // ----- test 0 -----
    p0 = new String[] {"I hope this problem", "is a whole lot better than", "this stupid haiku"};
    p1 = "abc";
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 =
        new String[] {
          "     ",
          "Measure your height",
          "AND WEIGHT      ",
          "said the doctor",
          "",
          "And make sure to take your pills",
          "   to   cure   your    ills",
          "Every",
          "DAY"
        };
    p1 = " aab ccde";
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 =
        new String[] {
          "One bright day in the middle of the night",
          "Two dead boys got up to fight",
          "Back to back they faced each other",
          "Drew their swords and shot each other",
          "",
          "A deaf policeman heard the noise",
          "And came to arrest the two dead boys",
          "And if you dont believe this lie is true",
          "Ask the blind man he saw it too"
        };
    p1 = "aabb cdef";
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new String[] {"", "", "", ""};
    p1 = "    ";
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new String[] {
          "This poem has uppercase letters",
          "In its rhyme scheme",
          "Alpha",
          "Blaster",
          "Cat",
          "Desert",
          "Elephant",
          "Frog",
          "Gulch",
          "Horse",
          "Ireland",
          "Jam",
          "Krispy Kreme",
          "Loofah",
          "Moo",
          "Narf",
          "Old",
          "Pink",
          "Quash",
          "Rainbow",
          "Star",
          "Tour",
          "Uvula",
          "Very",
          "Will",
          "Xmas",
          "Young",
          "Zed",
          "deception",
          "comic",
          "grout",
          "oval",
          "cable",
          "rob",
          "steal",
          "steel",
          "weak"
        };
    p1 = "abcdefghibjkblmnopqrstcuvwxyzABCbDEFG";
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 =
        new String[] {
          " ",
          "     ",
          "This poem",
          "         ",
          " ",
          " ",
          "",
          "Has lots of blank lines",
          " ",
          "      ",
          "                                            ",
          "         ",
          " ",
          "              ",
          "                                                  ",
          "  in      it           "
        };
    p1 = "  a    b       c";
    all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
    // ------------------

    // ----- test 6 -----
    p0 = new String[] {"too bad   your", "     solution went   sour"};
    p1 = "aa";
    all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
