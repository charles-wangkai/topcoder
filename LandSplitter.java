public class LandSplitter {
  public long cheapest(int N, int A, int B) {
    long result = Long.MAX_VALUE;
    for (int countA = 0; countA * A <= N; ++countA) {
      int rest = (N - countA * A) % B;
      if (rest == 0 || rest > A) {
        int countB = (N - countA * A) / B;

        int sumA = countA * A;
        int sumB = countB * B;

        result =
            Math.min(
                result,
                countA * (countA - 1L) / 2 * A * A
                    + countB * (countB - 1L) / 2 * B * B
                    + (long) sumA * sumB
                    + (long) rest * (sumA + sumB));
      }
    }

    return (result == Long.MAX_VALUE) ? -1 : result;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int p1, int p2, boolean hasAnswer, long p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
    System.out.println("]");
    LandSplitter obj;
    long answer;
    obj = new LandSplitter();
    long startTime = System.currentTimeMillis();
    answer = obj.cheapest(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;
    long p3;

    // ----- test 0 -----
    p0 = 12;
    p1 = 3;
    p2 = 3;
    p3 = 54L;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 10;
    p1 = 3;
    p2 = 4;
    p3 = 33L;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 47;
    p1 = 1;
    p2 = 47;
    p3 = 0L;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 70;
    p1 = 40;
    p2 = 50;
    p3 = -1L;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 47;
    p1 = 4;
    p2 = 7;
    p3 = 945L;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = 22403306;
    p1 = 313621;
    p2 = 330744;
    p3 = 247262880616435L;
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
