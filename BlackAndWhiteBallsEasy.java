import java.util.ArrayList;
import java.util.List;

public class BlackAndWhiteBallsEasy {
  static final int MODULUS = 1_000_000_007;

  public int getNumber(int[] balls, int white, int black) {
    List<Character> row = new ArrayList<>();
    for (int i = 0; i < balls.length; ++i) {
      for (int j = 0; j < balls[i]; ++j) {
        row.add((i % 2 == 0) ? 'W' : 'B');
      }
    }

    int[] wayNums = new int[row.size() + 1];
    wayNums[0] = 1;
    for (int i = 1; i < wayNums.length; ++i) {
      int wCount = 0;
      int bCount = 0;
      for (int j = i - 1; j >= 0; --j) {
        if (row.get(j) == 'W') {
          ++wCount;
        } else {
          ++bCount;
        }

        if (wCount == white) {
          wayNums[i] = addMod(wayNums[i], wayNums[j]);
        }
        if (bCount == black) {
          wayNums[i] = addMod(wayNums[i], wayNums[j]);
        }
      }
    }

    return wayNums[wayNums.length - 1];
  }

  int addMod(int x, int y) {
    return Math.floorMod(x + y, MODULUS);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int[] p0, int p1, int p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + p1 + "," + p2);
    System.out.println("]");
    BlackAndWhiteBallsEasy obj;
    int answer;
    obj = new BlackAndWhiteBallsEasy();
    long startTime = System.currentTimeMillis();
    answer = obj.getNumber(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;
    int p2;
    int p3;

    // ----- test 0 -----
    p0 = new int[] {2, 2};
    p1 = 1;
    p2 = 2;
    p3 = 4;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] {2, 1, 3};
    p1 = 1;
    p2 = 1;
    p3 = 14;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] {1, 1, 1, 1, 1};
    p1 = 1;
    p2 = 1;
    p3 = 28;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[] {2, 2, 2, 2, 2};
    p1 = 1;
    p2 = 1;
    p3 = 236;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = new int[] {3, 6, 3, 10};
    p1 = 2;
    p2 = 3;
    p3 = 12;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = new int[] {30, 15, 45, 20, 8, 13, 7, 3, 25, 10};
    p1 = 3;
    p2 = 2;
    p3 = 180210099;
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
