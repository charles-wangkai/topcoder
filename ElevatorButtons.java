import java.util.Arrays;
import java.util.Collections;
import java.util.stream.IntStream;

public class ElevatorButtons {
  public int[] nextStops(int currentFloor, int currentDirection, int[] buttonsPressed) {
    IntStream up = Arrays.stream(buttonsPressed).filter(x -> x > currentFloor).distinct().sorted();
    IntStream down =
        Arrays.stream(buttonsPressed)
            .filter(x -> x < currentFloor)
            .distinct()
            .boxed()
            .sorted(Collections.reverseOrder())
            .mapToInt(Integer::intValue);

    return ((currentDirection == 1) ? IntStream.concat(up, down) : IntStream.concat(down, up))
        .toArray();
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int p1, int[] p2, boolean hasAnswer, int[] p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + "{");
    for (int i = 0; p2.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p2[i]);
    }
    System.out.print("}");
    System.out.println("]");
    ElevatorButtons obj;
    int[] answer;
    obj = new ElevatorButtons();
    long startTime = System.currentTimeMillis();
    answer = obj.nextStops(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p3.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print(p3[i]);
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(answer[i]);
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p3.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (answer[i] != p3[i]) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int[] p2;
    int[] p3;

    // ----- test 0 -----
    p0 = 10;
    p1 = 1;
    p2 = new int[] {7, 15};
    p3 = new int[] {15, 7};
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 10;
    p1 = -1;
    p2 = new int[] {7, 15};
    p3 = new int[] {7, 15};
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 10;
    p1 = -1;
    p2 = new int[] {47, 47, 47, 47, 47};
    p3 = new int[] {47};
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 500;
    p1 = 1;
    p2 = new int[] {420, 570, 140, 230, 915, 820, 499, 820, 177};
    p3 = new int[] {570, 820, 915, 499, 420, 230, 177, 140};
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 1000;
    p1 = -1;
    p2 = new int[] {0};
    p3 = new int[] {0};
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = 600;
    p1 = -1;
    p2 = new int[] {420, 570, 140, 230, 915, 820, 499, 820, 177};
    p3 = new int[] {570, 499, 420, 230, 177, 140, 820, 915};
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
