import java.util.Arrays;
import java.util.stream.IntStream;

public class WordFind {
	public String[] findWords(String[] grid, String[] wordList) {
		return Arrays.stream(wordList).map(word -> find(grid, word)).toArray(String[]::new);
	}

	String find(String[] grid, String word) {
		for (int r = 0; r < grid.length; ++r) {
			for (int c = 0; c < grid[0].length(); ++c) {
				if (isMatch(grid, word, r, c, 0, 1) || isMatch(grid, word, r, c, 1, 0)
						|| isMatch(grid, word, r, c, 1, 1)) {
					return String.format("%d %d", r, c);
				}
			}
		}

		return "";
	}

	boolean isMatch(String[] grid, String word, int beginR, int beginC, int offsetR, int offsetC) {
		return IntStream.range(0, word.length()).allMatch(i -> {
			int r = beginR + i * offsetR;
			int c = beginC + i * offsetC;

			return r >= 0 && r < grid.length && c >= 0 && c < grid[0].length() && word.charAt(i) == grid[r].charAt(c);
		});
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, String[] p1, boolean hasAnswer, String[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		WordFind obj;
		String[] answer;
		obj = new WordFind();
		long startTime = System.currentTimeMillis();
		answer = obj.findWords(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p2[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p2[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		String[] p1;
		String[] p2;

		// ----- test 0 -----
		p0 = new String[] { "TEST", "GOAT", "BOAT" };
		p1 = new String[] { "GOAT", "BOAT", "TEST" };
		p2 = new String[] { "1 0", "2 0", "0 0" };
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "SXXX", "XQXM", "XXLA", "XXXR" };
		p1 = new String[] { "SQL", "RAM" };
		p2 = new String[] { "0 0", "" };
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "EASYTOFINDEAGSRVHOTCJYG", "FLVENKDHCESOXXXXFAGJKEO", "YHEDYNAIRQGIZECGXQLKDBI",
				"DEIJFKABAQSIHSNDLOMYJIN", "CKXINIMMNGRNSNRGIWQLWOG", "VOFQDROQGCWDKOUYRAFUCDO",
				"PFLXWTYKOITSURQJGEGSPGG" };
		p1 = new String[] { "EASYTOFIND", "DIAG", "GOING", "THISISTOOLONGTOFITINTHISPUZZLE" };
		p2 = new String[] { "0 0", "1 6", "0 22", "" };
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
