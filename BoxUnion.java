import java.util.Arrays;

public class BoxUnion {
	static final int LIMIT = 20000;

	public int area(String[] rectangles) {
		Rectangle[] rects = Arrays.stream(rectangles).map(s -> {
			String[] parts = s.split(" ");
			int minX = Integer.parseInt(parts[0]);
			int minY = Integer.parseInt(parts[1]);
			int maxX = Integer.parseInt(parts[2]);
			int maxY = Integer.parseInt(parts[3]);

			return new Rectangle(minX, minY, maxX, maxY);
		}).toArray(Rectangle[]::new);

		int result = Arrays.stream(rects).mapToInt(Rectangle::computeArea).sum();
		if (rectangles.length == 2) {
			result -= computeIntersect(rects[0], rects[1]).computeArea();
		} else if (rectangles.length == 3) {
			result += computeIntersect(computeIntersect(rects[0], rects[1]), rects[2]).computeArea()
					- computeIntersect(rects[0], rects[1]).computeArea()
					- computeIntersect(rects[1], rects[2]).computeArea()
					- computeIntersect(rects[2], rects[0]).computeArea();
		}

		return result;
	}

	Rectangle computeIntersect(Rectangle rect1, Rectangle rect2) {
		return new Rectangle(Math.max(rect1.minX, rect2.minX), Math.max(rect1.minY, rect2.minY),
				Math.min(rect1.maxX, rect2.maxX), Math.min(rect1.maxY, rect2.maxY));
	}

	class Rectangle {
		int minX;
		int minY;
		int maxX;
		int maxY;

		Rectangle(int minX, int minY, int maxX, int maxY) {
			this.minX = minX;
			this.minY = minY;
			this.maxX = maxX;
			this.maxY = maxY;
		}

		int computeArea() {
			return Math.max(0, maxX - minX) * Math.max(0, maxY - minY);
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		BoxUnion obj;
		int answer;
		obj = new BoxUnion();
		long startTime = System.currentTimeMillis();
		answer = obj.area(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		int p1;

		// ----- test 0 -----
		p0 = new String[] { "200 300 203 304" };
		p1 = 12;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "0 0 10 10", "20 20 30 30" };
		p1 = 200;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "0 500 20000 501", "500 0 501 20000" };
		p1 = 39999;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "4 6 18 24", "7 2 12 19", "0 0 100 100" };
		p1 = 10000;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[] { "1 3 5 6", "3 1 7 5", "4 4 9 7" };
		p1 = 35;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = new String[] { "0 0 20000 20000", "0 0 20000 20000", "0 0 20000 20000" };
		p1 = 400000000;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
