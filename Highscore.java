import java.util.Arrays;

public class Highscore {
  public int getRank(int[] scores, int newscore, int places) {
    return (scores.length == places && newscore <= scores[scores.length - 1])
        ? -1
        : ((int) Arrays.stream(scores).filter(score -> score > newscore).count() + 1);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int[] p0, int p1, int p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + p1 + "," + p2);
    System.out.println("]");
    Highscore obj;
    int answer;
    obj = new Highscore();
    long startTime = System.currentTimeMillis();
    answer = obj.getRank(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;
    int p2;
    int p3;

    // ----- test 0 -----
    p0 = new int[] {100, 90, 80};
    p1 = 90;
    p2 = 10;
    p3 = 2;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] {};
    p1 = 0;
    p2 = 50;
    p3 = 1;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
    p1 = 1;
    p2 = 10;
    p3 = -1;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new int[] {10, 9, 8, 7, 6, 5, 4, 3, 3, 0};
    p1 = 1;
    p2 = 10;
    p3 = 10;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new int[] {
          2000000000,
          19539,
          19466,
          19146,
          17441,
          17002,
          16348,
          16343,
          15981,
          15346,
          14748,
          14594,
          13752,
          13684,
          13336,
          13290,
          12939,
          12208,
          12163,
          12133,
          11621,
          11119,
          10872,
          10710,
          10390,
          9934,
          9296,
          8844,
          8662,
          8653,
          8168,
          7914,
          7529,
          7354,
          6016,
          5428,
          5302,
          5158,
          4853,
          4538,
          4328,
          3443,
          3222,
          2107,
          2107,
          1337,
          951,
          586,
          424,
          31
        };
    p1 = 1337;
    p2 = 50;
    p3 = 46;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
