import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class CeyKaps {
  public String decipher(String typed, String[] switches) {
    char[] maps = new char[26];
    for (int i = 0; i < maps.length; ++i) {
      maps[i] = (char) (i + 'A');
    }

    for (String sw : switches) {
      int index1 = find(maps, sw.charAt(0));
      int index2 = find(maps, sw.charAt(2));

      char temp = maps[index1];
      maps[index1] = maps[index2];
      maps[index2] = temp;
    }

    return typed
        .chars()
        .mapToObj(c -> maps[c - 'A'])
        .map(String::valueOf)
        .collect(Collectors.joining());
  }

  int find(char[] maps, char target) {
    return IntStream.range(0, maps.length).filter(i -> maps[i] == target).findAny().getAsInt();
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String p0, String[] p1, boolean hasAnswer, String p2) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p1[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    CeyKaps obj;
    String answer;
    obj = new CeyKaps();
    long startTime = System.currentTimeMillis();
    answer = obj.decipher(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p2 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p2);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    String[] p1;
    String p2;

    // ----- test 0 -----
    p0 = "AAAAA";
    p1 = new String[] {"A:B", "B:C", "A:D"};
    p2 = "CCCCC";
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "ABCDE";
    p1 = new String[] {"A:B", "B:C", "C:D", "D:E", "E:A"};
    p2 = "AEBCD";
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "IHWSIOTCHEDMYKEYCAPSARWUND";
    p1 = new String[] {"W:O", "W:I"};
    p2 = "WHOSWITCHEDMYKEYCAPSAROUND";
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
