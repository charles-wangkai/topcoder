import java.util.Arrays;

public class VolumeGuess {
	public int correctVolume(String[] queries, int numberOfBoxes, int ithBox) {
		int[] volumes = new int[numberOfBoxes + 1];
		Arrays.fill(volumes, -1);

		Query[] queryArray = Arrays.stream(queries).map(q -> {
			String[] parts = q.split(",");
			int box1 = Integer.parseInt(parts[0]);
			int box2 = Integer.parseInt(parts[1]);
			int volume = Integer.parseInt(parts[2]);

			return new Query(box1, box2, volume);
		}).toArray(Query[]::new);

		int maxVolume = Arrays.stream(queryArray).mapToInt(q -> q.volume).max().getAsInt();
		for (int i = 0;; ++i) {
			if (queryArray[i].volume == maxVolume) {
				volumes[queryArray[i].box1] = maxVolume;
				volumes[queryArray[i].box2] = maxVolume;

				break;
			}
		}

		while (true) {
			boolean modified = false;

			for (Query query : queryArray) {
				if (volumes[query.box1] == -1 && volumes[query.box2] != -1 && volumes[query.box2] != query.volume) {
					volumes[query.box1] = query.volume;
					modified = true;
				} else if (volumes[query.box1] != -1 && volumes[query.box2] == -1
						&& volumes[query.box1] != query.volume) {
					volumes[query.box2] = query.volume;
					modified = true;
				}
			}

			if (!modified) {
				break;
			}
		}

		return volumes[ithBox];
	}

	class Query {
		int box1;
		int box2;
		int volume;

		Query(int box1, int box2, int volume) {
			this.box1 = box1;
			this.box2 = box2;
			this.volume = volume;
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + p1 + "," + p2);
		System.out.println("]");
		VolumeGuess obj;
		int answer;
		obj = new VolumeGuess();
		long startTime = System.currentTimeMillis();
		answer = obj.correctVolume(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		int p1;
		int p2;
		int p3;

		// ----- test 0 -----
		p0 = new String[] { "1,2,10", "1,3,10", "2,3,20" };
		p1 = 3;
		p2 = 1;
		p3 = 10;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "1,02,10", "2,3,010", "1,3,20" };
		p1 = 3;
		p2 = 2;
		p3 = 10;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "1,2,31", "1,3,9", "1,4,31", "2,4,32", "3,4,9", "3,2,9" };
		p1 = 4;
		p2 = 1;
		p3 = 31;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "1,2,31", "1,3,9", "1,4,31", "2,4,32", "3,4,9", "3,2,9" };
		p1 = 4;
		p2 = 3;
		p3 = 9;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[] { "2,8,232", "4,8,234", "3,4,233", "3,5,233", "3,6,233", "3,7,233", "4,7,234", "1,2,231",
				"1,3,231", "5,6,235", "5,7,235", "5,8,235", "5,9,235", "6,7,236", "1,4,231", "1,5,231", "7,8,237",
				"4,9,234", "3,8,233", "3,9,233", "4,5,234", "4,6,234", "2,9,232", "7,9,237", "8,9,238", "1,8,231",
				"1,9,231", "2,3,232", "2,4,232", "2,5,232", "1,6,231", "1,7,231", "6,8,236", "6,9,236", "2,6,232",
				"2,7,232" };
		p1 = 9;
		p2 = 6;
		p3 = 236;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
