import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Homomorphism {
  public int count(String u, String v) {
    if (u.charAt(0) == '1') {
      return count(invert(u), invert(v));
    }

    int count0 = (int) u.chars().filter(c -> c == '0').count();
    int count1 = u.length() - count0;

    if (count1 == 0) {
      return (v.length() % u.length() == 0
              && IntStream.range(1, u.length())
                  .allMatch(
                      i ->
                          v.substring(
                                  i * (v.length() / u.length()),
                                  (i + 1) * (v.length() / u.length()))
                              .equals(v.substring(0, v.length() / u.length()))))
          ? -1
          : 0;
    }

    int result = 0;
    for (int length0 = 1; count0 * length0 < v.length(); ++length0) {
      String value0 = v.substring(0, length0);

      if ((v.length() - count0 * length0) % count1 == 0) {
        int length1 = (v.length() - count0 * length0) / count1;
        int index1 = u.indexOf('1');
        String value1 = v.substring(index1 * length0, index1 * length0 + length1);

        if (map(u, value0, value1).equals(v)) {
          ++result;
        }
      }
    }

    return result;
  }

  String map(String u, String value0, String value1) {
    return u.chars().mapToObj(c -> (c == '0') ? value0 : value1).collect(Collectors.joining());
  }

  String invert(String s) {
    return s.chars()
        .mapToObj(c -> (char) ('0' + '1' - c))
        .map(String::valueOf)
        .collect(Collectors.joining());
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String p0, String p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
    System.out.println("]");
    Homomorphism obj;
    int answer;
    obj = new Homomorphism();
    long startTime = System.currentTimeMillis();
    answer = obj.count(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    String p1;
    int p2;

    // ----- test 0 -----
    p0 = "10";
    p1 = "11001";
    p2 = 4;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "00";
    p1 = "11111";
    p2 = 0;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "11";
    p1 = "00";
    p2 = -1;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = "001";
    p1 = "1010001";
    p2 = 1;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = "101";
    p1 = "11111111111111111111111111111111111111111111111111";
    p2 = 24;
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
