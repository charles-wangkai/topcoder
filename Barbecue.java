import java.util.Comparator;
import java.util.stream.IntStream;

public class Barbecue {
  public int eliminate(int n, int[] voter, int[] excluded) {
    int[] receiveCounts = new int[n];
    int[] voteCounts = new int[n];
    for (int i = 0; i < voter.length; ++i) {
      ++receiveCounts[excluded[i]];
      ++voteCounts[voter[i]];
    }

    return IntStream.range(0, n)
        .boxed()
        .min(
            Comparator.comparing((Integer i) -> receiveCounts[i])
                .reversed()
                .thenComparing(Comparator.comparing((Integer i) -> voteCounts[i]).reversed())
                .thenComparing(i -> i))
        .get();
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p1[i]);
    }
    System.out.print("}" + "," + "{");
    for (int i = 0; p2.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p2[i]);
    }
    System.out.print("}");
    System.out.println("]");
    Barbecue obj;
    int answer;
    obj = new Barbecue();
    long startTime = System.currentTimeMillis();
    answer = obj.eliminate(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int[] p1;
    int[] p2;
    int p3;

    // ----- test 0 -----
    p0 = 3;
    p1 = new int[] {0, 1, 2, 2};
    p2 = new int[] {2, 2, 0, 1};
    p3 = 2;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 3;
    p1 = new int[] {0, 2, 2};
    p2 = new int[] {2, 0, 1};
    p3 = 2;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 2;
    p1 = new int[] {0, 1};
    p2 = new int[] {1, 0};
    p3 = 0;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 20;
    p1 =
        new int[] {
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
          12, 13, 14, 15, 16, 17, 18, 19, 19, 19, 19
        };
    p2 =
        new int[] {
          0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7,
          8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3
        };
    p3 = 2;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 5;
    p1 = new int[] {4, 3, 1, 0};
    p2 = new int[] {2, 2, 3, 3};
    p3 = 3;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = 10;
    p1 = new int[] {4, 5, 6, 7, 8, 9, 0, 1, 2};
    p2 = new int[] {5, 6, 7, 8, 9, 0, 1, 2, 3};
    p3 = 0;
    all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 6 -----
    p0 = 7;
    p1 =
        new int[] {
          1, 2, 3, 4, 5, 6, 0, 2, 3, 4, 5, 6, 0, 1, 3, 4, 5, 6, 0, 1, 2, 4, 5, 6, 0, 1, 2, 3, 5, 6,
          0, 1, 2, 3, 4, 6, 0, 1, 2, 3, 4, 5
        };
    p2 =
        new int[] {
          0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
          5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6
        };
    p3 = 0;
    all_right = KawigiEdit_RunTest(6, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 7 -----
    p0 = 5;
    p1 = new int[] {};
    p2 = new int[] {};
    p3 = 0;
    all_right = KawigiEdit_RunTest(7, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
