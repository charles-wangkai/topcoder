import java.util.Arrays;
import java.util.stream.IntStream;

public class DiskScheduler {
	static final int SECTOR_NUM = 100;

	public int optimize(int start, int[] sectors) {
		int[] sorted = IntStream.concat(Arrays.stream(sectors).filter(s -> s > start).sorted(),
				Arrays.stream(sectors).filter(s -> s < start).sorted()).toArray();

		int result = Integer.MAX_VALUE;
		int prev = start;
		for (int i = sorted.length - 1; i >= -1; --i) {
			int leftDistance = (start - prev + SECTOR_NUM) % SECTOR_NUM;
			int rightDistance = (((i == -1) ? start : sorted[i]) - start + SECTOR_NUM) % SECTOR_NUM;

			result = Math.min(result, leftDistance + rightDistance + Math.min(leftDistance, rightDistance));

			if (i != -1) {
				prev = sorted[i];
			}
		}

		return result;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		DiskScheduler obj;
		int answer;
		obj = new DiskScheduler();
		long startTime = System.currentTimeMillis();
		answer = obj.optimize(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		int[] p1;
		int p2;

		// ----- test 0 -----
		p0 = 5;
		p1 = new int[] { 6, 8, 65, 71 };
		p2 = 46;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 5;
		p1 = new int[] { 55, 65, 71 };
		p2 = 50;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 20;
		p1 = new int[] { 1, 21, 99 };
		p2 = 23;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 99;
		p1 = new int[] { 55, 56, 61, 70, 76, 78, 80, 83, 84, 90, 1, 4, 6, 26, 27, 33, 38, 46, 47, 49 };
		p2 = 87;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
