public class TravellingByTrain {
  public String earliestArrival(String[] timeTable) {
    int totalMinute = 9 * 60;
    for (String windows : timeTable) {
      int nextTime = Integer.MAX_VALUE;
      for (String window : windows.split(" ")) {
        int beginMinute = convertToMinute(window.substring(0, 5));
        int endMinute = convertToMinute(window.substring(6));

        int duration = endMinute - beginMinute;
        if (duration <= 0) {
          duration += 24 * 60;
        }

        int waitTime = beginMinute - totalMinute % (24 * 60);
        if (waitTime < 0) {
          waitTime += 24 * 60;
        }

        nextTime = Math.min(nextTime, totalMinute + waitTime + duration);
      }

      totalMinute = nextTime;
    }

    return String.format(
        "%02d:%02d, day %d", totalMinute / 60 % 24, totalMinute % 60, totalMinute / (24 * 60) + 1);
  }

  int convertToMinute(String s) {
    return Integer.parseInt(s.substring(0, 2)) * 60 + Integer.parseInt(s.substring(3));
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, boolean hasAnswer, String p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    TravellingByTrain obj;
    String answer;
    obj = new TravellingByTrain();
    long startTime = System.currentTimeMillis();
    answer = obj.earliestArrival(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p1 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p1);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String p1;

    // ----- test 0 -----
    p0 = new String[] {"10:00-13:00 12:00-15:00", "11:00-16:00 14:00-19:00"};
    p1 = "19:00, day 1";
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[] {"09:00-13:57", "13:56-17:00"};
    p1 = "17:00, day 2";
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new String[] {"10:00-08:00"};
    p1 = "08:00, day 2";
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "09:10-11:00 09:05-10:05", "10:10-12:00 11:00-11:05", "17:00-08:00", "09:00-08:00"
        };
    p1 = "08:00, day 3";
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
