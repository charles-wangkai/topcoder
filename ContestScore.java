import java.util.Arrays;
import java.util.stream.IntStream;

public class ContestScore {
	public String[] sortResults(String[] data) {
		if (data.length == 0) {
			return new String[0];
		}

		int scoreNum = data[0].split(" ").length - 1;

		Group[] groups = Arrays.stream(data).map(d -> {
			String[] parts = d.split(" ");
			String name = parts[0];
			int[] scores = new int[scoreNum];
			for (int i = 0; i < scores.length; ++i) {
				scores[i] = Integer.parseInt(parts[i + 1].replaceAll("\\.", ""));
			}

			return new Group(name, scores);
		}).toArray(Group[]::new);

		for (Group group : groups) {
			group.totalRank = IntStream.range(0, scoreNum)
					.map(i -> 1 + (int) Arrays.stream(groups).filter(g -> g.scores[i] > group.scores[i]).count()).sum();
			group.totalScore = Arrays.stream(group.scores).sum();
		}

		return Arrays.stream(groups).sorted((g1, g2) -> {
			if (g1.totalRank != g2.totalRank) {
				return Integer.compare(g1.totalRank, g2.totalRank);
			}
			if (g1.totalScore != g2.totalScore) {
				return -Integer.compare(g1.totalScore, g2.totalScore);
			}

			return g1.name.compareTo(g2.name);
		}).map(group -> String.format("%s %d %d.%d", group.name, group.totalRank, group.totalScore / 10,
				group.totalScore % 10)).toArray(String[]::new);
	}

	class Group {
		String name;
		int[] scores;
		int totalRank;
		int totalScore;

		Group(String name, int[] scores) {
			this.name = name;
			this.scores = scores;
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		ContestScore obj;
		String[] answer;
		obj = new ContestScore();
		long startTime = System.currentTimeMillis();
		answer = obj.sortResults(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		String[] p1;

		// ----- test 0 -----
		p0 = new String[] { "A 90.7 92.9 87.4", "B 90.5 96.6 88.0", "C 92.2 91.0 95.3" };
		p1 = new String[] { "C 5 278.5", "B 6 275.1", "A 7 271.0" };
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "STANFORD 85.3 90.1 82.6 84.6 96.6 94.5 87.3 90.3",
				"MIT 95.5 83.9 80.4 85.5 98.7 98.3 96.7 82.7", "PRINCETON 99.2 79.1 87.6 85.1 93.6 96.4 86.0 90.6",
				"HARVARD 83.6 92.0 85.5 94.3 97.5 91.5 92.5 83.0", "YALE 99.5 92.6 86.2 82.0 96.4 92.6 84.5 78.6",
				"COLUMBIA 97.2 87.6 81.7 93.7 88.0 86.3 95.9 89.6", "BROWN 92.2 95.8 92.1 81.5 89.5 87.0 95.5 86.4",
				"PENN 96.3 80.7 81.2 91.6 85.8 92.2 83.9 87.8", "CORNELL 88.0 83.7 85.0 83.8 99.8 92.1 91.0 88.9" };
		p1 = new String[] { "PRINCETON 34 717.6", "MIT 36 721.7", "HARVARD 38 719.9", "COLUMBIA 39 720.0",
				"STANFORD 39 711.3", "YALE 40 712.4", "BROWN 41 720.0", "CORNELL 42 712.3", "PENN 51 699.5" };
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] {};
		p1 = new String[] {};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "AA 90.0 80.0 70.0 60.0 50.0 40.0", "BBB 80.0 70.0 60.0 50.0 40.0 90.0",
				"EEE 70.0 60.0 50.0 40.0 90.0 80.0", "AAA 60.0 50.0 40.0 90.0 80.0 70.0",
				"DDD 50.0 40.0 90.0 80.0 70.0 60.0", "CCC 40.0 90.0 80.0 70.0 60.0 50.0" };
		p1 = new String[] { "AA 21 390.0", "AAA 21 390.0", "BBB 21 390.0", "CCC 21 390.0", "DDD 21 390.0",
				"EEE 21 390.0" };
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[] { "A 00.1", "B 05.2", "C 29.0", "D 00.0" };
		p1 = new String[] { "C 1 29.0", "B 2 5.2", "A 3 0.1", "D 4 0.0" };
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
