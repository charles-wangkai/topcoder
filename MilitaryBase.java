public class MilitaryBase {
	public int getSchoolBuildingCount(String[] photo, int k) {
		int row = photo.length;
		int col = photo[0].length();

		int result = 0;
		for (int minR = 0; minR < row; ++minR) {
			for (int minC = 0; minC < col; ++minC) {
				if (photo[minR].charAt(minC) == '*') {
					int maxR = minR;
					while (maxR + 1 < row && photo[maxR + 1].charAt(minC) == '*') {
						++maxR;
					}

					int maxC = minC;
					while (maxC + 1 < col && photo[minR].charAt(maxC + 1) == '*') {
						++maxC;
					}

					if (isSchool(photo, k, minR, minC, maxR, maxC)) {
						++result;
					}
				}
			}
		}

		return result;
	}

	boolean isSchool(String[] photo, int k, int minR, int minC, int maxR, int maxC) {
		int row = photo.length;
		int col = photo[0].length();

		if (maxR - minR + 1 <= 2 * k || maxC - minC + 1 <= 2 * k) {
			return false;
		}

		for (int r = minR - 1; r <= maxR + 1; ++r) {
			for (int c : new int[] { minC - 1, maxC + 1 }) {
				if (r >= 0 && r < row && c >= 0 && c < col && photo[r].charAt(c) == '*') {
					return false;
				}
			}
		}
		for (int c = minC - 1; c <= maxC + 1; ++c) {
			for (int r : new int[] { minR - 1, maxR + 1 }) {
				if (r >= 0 && r < row && c >= 0 && c < col && photo[r].charAt(c) == '*') {
					return false;
				}
			}
		}

		for (int r = minR; r <= maxR; ++r) {
			for (int c = minC; c <= maxC; ++c) {
				if (photo[r]
						.charAt(c) != ((r - minR < k || maxR - r < k || c - minC < k || maxC - c < k) ? '*' : '.')) {
					return false;
				}
			}
		}

		return true;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		MilitaryBase obj;
		int answer;
		obj = new MilitaryBase();
		long startTime = System.currentTimeMillis();
		answer = obj.getSchoolBuildingCount(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		int p1;
		int p2;

		// ----- test 0 -----
		p0 = new String[] { "***......", "*.*......", "***.*****", "....*****", "....**.**", "....**.**", "....**.**",
				"....*****", "....*****" };
		p1 = 1;
		p2 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "*****.*****", "*****.*****", "**.**.**.**", "*****.*****", "*****.*****", "...........",
				"*****.*****", "**.**.*****", "*****.**.**", "...........", "****.......", "****.......", "**.........",
				"**........." };
		p1 = 2;
		p2 = 2;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "*********", "*.......*", "*.*****.*", "*.*...*.*", "*.*...*.*", "*.*****.*", "*.......*",
				"*********" };
		p1 = 1;
		p2 = 1;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "..........", ".****.....", ".*..*.....", ".****.....", ".....****.", ".....*..*.",
				".....****.", ".........." };
		p1 = 1;
		p2 = 0;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[] { "*********.", "*.......*.", "*.***...*.", "*.*.*.*.*.", "*.***...*.", "*.......*.",
				"*********.", "*********." };
		p1 = 1;
		p2 = 1;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = new String[] { "*******", "*.....*", "*.**..*", "*..**.*", "*.....*", "*******" };
		p1 = 1;
		p2 = 0;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 6 -----
		p0 = new String[] { "*" };
		p1 = 1;
		p2 = 0;
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
