import java.util.Arrays;
import java.util.stream.IntStream;

public class BombSweeper {
  public double winPercentage(String[] board) {
    int row = board.length;
    int col = board[0].length();

    int winNum =
        IntStream.range(0, row)
            .map(
                r ->
                    (int)
                        IntStream.range(0, col)
                            .filter(
                                c ->
                                    IntStream.rangeClosed(-1, 1)
                                        .allMatch(
                                            dr ->
                                                IntStream.rangeClosed(-1, 1)
                                                    .allMatch(
                                                        dc -> {
                                                          int adjR = r + dr;
                                                          int adjC = c + dc;

                                                          return adjR < 0
                                                              || adjR >= row
                                                              || adjC < 0
                                                              || adjC >= col
                                                              || board[adjR].charAt(adjC) == '.';
                                                        })))
                            .count())
            .sum();
    int lossNum =
        Arrays.stream(board)
            .mapToInt(line -> (int) line.chars().filter(c -> c == 'B').count())
            .sum();

    return 100.0 * winNum / (winNum + lossNum);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, boolean hasAnswer, double p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    BombSweeper obj;
    double answer;
    obj = new BombSweeper();
    long startTime = System.currentTimeMillis();
    answer = obj.winPercentage(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p1);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = Math.abs(p1 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p1));
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    double p1;

    // ----- test 0 -----
    p0 = new String[] {".....", ".....", "..B..", ".....", "....."};
    p1 = 94.11764705882354D;
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[] {"BBBBB", "B...B", "B...B", "B...B", "BBBBB"};
    p1 = 5.882352941176471D;
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 =
        new String[] {
          ".........",
          ".B..B..B.",
          ".........",
          ".........",
          ".B..B..B.",
          ".........",
          ".........",
          ".B..B..B.",
          "........."
        };
    p1 = 0.0D;
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          ".........................",
          ".........................",
          ".........................",
          "........................."
        };
    p1 = 100.0D;
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new String[] {
          "......B.......B..B...........................B....",
          "..............B..................BB..B............",
          "B.B.B.............B.....B..............B..........",
          "...................B...B....................BB....",
          "...B.....B.........................B.......B.....B",
          "B.B.........B.....B.......B..B......B.B...B.BB....",
          "..B...................BB...............B..........",
          ".........B...B................B..B................",
          ".......BB.......B....B................B.....BBB...",
          ".......BB..........B..............B......BB.......",
          "...................BB.....................B.......",
          "...B.B.B......B..............B...B......B.........",
          "B................B................................",
          "....B..........B.....B..BB....B...............BB..",
          "..B....B.....B.............B.....B............B...",
          "...................B.B........B..B.........B.B....",
          ".....B.....B......................................",
          "...........BB......BB...B.B........B...B..........",
          ".....BBB......................................" + "....",
          ".B...........B....B...BB......B......B...B.B......",
          "..................B........BB................B....",
          "...............................B..B....BBB.B....B.",
          "..........B.......................................",
          ".....B..........B....BB......B.B......B......B....",
          ".....B..................B........B................",
          "............B.....B..B....BB...B....BB........B...",
          "..B.................B.........B...................",
          ".BB..............B................................",
          "...B....B..................B.................B....",
          "......B...B......B......................B.B.......",
          "..............B..................B.......B........",
          ".....B........BB...B.....B........................",
          ".......B......B.B..B..........B...........B....B..",
          "B...B...........B...B...B......B.B...B..B......B..",
          "....B..B.....B.B.......BB..B............B.B....B..",
          "B.......B..........B.........B...B.BB......B......",
          "....B...............................B.............",
          ".....B.B................................" + "..........",
          "..........B............B......B.B..B....B.........",
          "....B...B.......................B.................",
          "B.................B...........B..B....B...........",
          "...B.....B........................................",
          "...B..B......................................BBB..",
          ".B...B....................................B....B..",
          "...B...B..........B...B.B.........................",
          ".....B.............B...BB..........B..BBB.BB......",
          "....................B.....B.......................",
          "........B..BB..........B.B....B...........B......B",
          ".........B.....BB..B.............B....BB..........",
          "....B..B..............B...B..B..........B........."
        };
    p1 = 77.67558528428094D;
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
