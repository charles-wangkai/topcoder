public class SnowClearing {
  public int unreachable(String[] citymap, int row, int column) {
    int R = (citymap.length + 1) / 2;
    int C = (citymap[0].length() + 1) / 2;

    boolean[][] horizonStreets = new boolean[R][C - 1];
    for (int i = 0; i < horizonStreets.length; ++i) {
      for (int j = 0; j < horizonStreets[i].length; ++j) {
        horizonStreets[i][j] = citymap[i * 2].charAt(j * 2 + 1) == '-';
      }
    }

    boolean[][] verticalStreets = new boolean[R - 1][C];
    for (int i = 0; i < verticalStreets.length; ++i) {
      for (int j = 0; j < verticalStreets[i].length; ++j) {
        verticalStreets[i][j] = citymap[i * 2 + 1].charAt(j * 2) == '|';
      }
    }

    int result = 0;
    while (true) {
      boolean changed = false;

      for (int i = 0; i < horizonStreets.length; ++i) {
        for (int j = 0; j < horizonStreets[i].length; ++j) {
          if (horizonStreets[i][j]) {
            if (isDead(horizonStreets, verticalStreets, row, column, i, j)
                || isDead(horizonStreets, verticalStreets, row, column, i, j + 1)) {
              horizonStreets[i][j] = false;
              ++result;
              changed = true;
            }
          }
        }
      }

      for (int i = 0; i < verticalStreets.length; ++i) {
        for (int j = 0; j < verticalStreets[i].length; ++j) {
          if (verticalStreets[i][j]) {
            if (isDead(horizonStreets, verticalStreets, row, column, i, j)
                || isDead(horizonStreets, verticalStreets, row, column, i + 1, j)) {
              verticalStreets[i][j] = false;
              ++result;
              changed = true;
            }
          }
        }
      }

      if (!changed) {
        return result;
      }
    }
  }

  boolean isDead(
      boolean[][] horizonStreets, boolean[][] verticalStreets, int row, int column, int i, int j) {
    if (i == row - 1 && j == column - 1) {
      return false;
    }

    int streetCount = 0;
    if (j != 0 && horizonStreets[i][j - 1]) {
      ++streetCount;
    }
    if (j != horizonStreets[0].length && horizonStreets[i][j]) {
      ++streetCount;
    }
    if (i != 0 && verticalStreets[i - 1][j]) {
      ++streetCount;
    }
    if (i != verticalStreets.length && verticalStreets[i][j]) {
      ++streetCount;
    }

    return streetCount == 1;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, int p1, int p2, boolean hasAnswer, int p3) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}" + "," + p1 + "," + p2);
    System.out.println("]");
    SnowClearing obj;
    int answer;
    obj = new SnowClearing();
    long startTime = System.currentTimeMillis();
    answer = obj.unreachable(p0, p1, p2);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p3);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p3;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    int p1;
    int p2;
    int p3;

    // ----- test 0 -----
    p0 =
        new String[] {
          "+-+-+-+-+-+-+", "| | | | | | |", "+-+ +-+ +-+ +", "|   |   |    ", "+-+-+-+-+-+-+"
        };
    p1 = 2;
    p2 = 7;
    p3 = 2;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[] {"+-+", "| |", "+ +"};
    p1 = 1;
    p2 = 1;
    p3 = 3;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new String[] {"+-+-+", "| | |", "+-+ +"};
    p1 = 1;
    p2 = 3;
    p3 = 1;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = new String[] {"+-+-+", "|   |", "+-+-+"};
    p1 = 2;
    p2 = 2;
    p3 = 0;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new String[] {
          "+ +-+ +-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +",
          "| |   | |     |   |   |         |     | |     | |",
          "+ +-+-+-+ +-+-+-+ +-+ +-+-+-+-+ +-+-+-+ +-+ +-+-+",
          "| | |       |   | |   |   |   |   |     | |   |  ",
          "+ +-+-+ +-+-+ +-+-+-+-+-+-+-+ +-+ +-+ +-+ +-+ +-+",
          "|     | | | | |   |             |     |   | |   |",
          "+-+-+ +-+-+-+ +-+ +-+ + +-+-+-+-+-+ +-+-+ +-+-+-+",
          "|       | |     |     |   |         |   | |     |",
          "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+ +-+ +-+-+-+-+-+",
          "      |   | |     |   | |     | | |   | |       |",
          "+ +-+-+-+-+ + +-+ +-+ +-+ +-+-+ +-+-+-+-+-+ +-+-+",
          "| |   | |     |   |         |   | | |     |   | |",
          "+-+-+-+-+-+ +-+-+ +-+-+-+ +-+-+ +-+-+ +-+-+ +-+-+",
          "          |   |   |   |   | |                    ",
          "+-+-+-+-+-+-+ +-+-+-+ + +-+-+ +-+ +-+-+-+ +-+-+ +",
          "|                     | |     |   |   | |   | | |",
          "+ +-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+ +-+-+-+ + +-+",
          "| |     |   | | |   | | | |       | |   | | | | |",
          "+-+-+-+ +-+-+-+-+ +-+ + +-+ +-+-+-+ +-+-+ +-+ +-+",
          "    | |   | " + "| |   |               |   |          ",
          "+-+ +-+-+-+-+-+ +-+ + +-+-+-+-+-+-+ + + +-+-+ +-+",
          "  | | |         | | | |   |   | | | | | | | | |  ",
          "+-+-+ + +-+ +-+ +-+-+-+-+ + + + +-+-+ +-+-+-+-+-+",
          "    | | | | | | |         | | |       |     | |  ",
          "+ +-+ + + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+",
          "| |   | |     | |   |   |   |   |   | |         |",
          "+-+-+ +-+-+-+-+ +-+ + +-+-+-+-+ +-+ +-+-+-+-+-+-+",
          "      | |   | | | |     |       | |         | |  ",
          "+-+ + +-+-+-+-+ + +-+-+-+ +-+-+-+-+ +-+ +-+-+-+-+",
          "  | | | |   |   |     | |   |   | |   | | |   |  ",
          "+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+ +-+ +-+ +-+-+ +-+",
          "|     | | |   |     |     |   | | |   |   | | | |",
          "+-+-+-+-+-+-+ + +-+-+-+-+-+ +-+-+-+-+ +-+ + +-+-+",
          "| | | | |   | | |   | |         |     | | | |   |",
          "+ +-+ +-+-+ + + +-+-+ + + +-+-+-+-+ +-+ +-+-+-+-+",
          "  | | |   |     | |     |         |   | |   | | |",
          "+ +-+ +-+-+-+ +-+-+-+-+ +-+-+-+ +-+-+-+ +-+-+ + +",
          "|     | |     |   |           |   | | |   | | |  ",
          "+-+-+-+-+-+-+-+ +-+-+ +-+" + "-+-+-+-+ +-+-+ +-+-+ +-+",
          "|         |     |       | |   |       | | | | |  ",
          "+-+-+-+ +-+-+-+-+-+-+-+-+ +-+ +-+ +-+-+ +-+-+-+-+",
          "        |   |   | | | | | | | | | | | | | |     |",
          "+-+-+-+-+-+-+-+ +-+-+ +-+-+ +-+-+-+ +-+ + +-+-+ +",
          "      | | | |       | |     | |   |       |   | |",
          "+ +-+-+-+-+-+ +-+ +-+ +-+-+-+ +-+-+-+-+-+ + +-+-+",
          "| | |       | | | |       |     | | | |       | |",
          "+-+-+-+-+-+-+-+ + +-+-+-+ + +-+-+-+-+-+-+-+ +-+ +",
          "      |   |   | |   | |         |     | | | | | |",
          "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+ + + +-+-+ +"
        };
    p1 = 10;
    p2 = 12;
    p3 = 160;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
