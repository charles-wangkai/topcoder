import java.util.Map;
import java.util.stream.Collectors;

public class InstantRunoff {
  public String outcome(String candidates, String[] ballots) {
    while (!candidates.isEmpty()) {
      Map<Character, Integer> candidateToCount =
          candidates.chars().boxed().collect(Collectors.toMap(c -> (char) c.intValue(), c -> 0));
      for (String ballot : ballots) {
        if (!ballot.isEmpty()) {
          char candidate = ballot.charAt(0);
          candidateToCount.put(candidate, candidateToCount.get(candidate) + 1);
        }
      }

      int maxCount =
          candidateToCount.values().stream().mapToInt(Integer::intValue).max().getAsInt();
      if (maxCount * 2 > ballots.length) {
        return String.valueOf(
            candidateToCount.keySet().stream()
                .filter(candidate -> candidateToCount.get(candidate) == maxCount)
                .findAny()
                .get());
      }

      int minCount =
          candidateToCount.values().stream().mapToInt(Integer::intValue).min().getAsInt();
      String pattern =
          String.format(
              "[%s]",
              candidateToCount.keySet().stream()
                  .filter(candidate -> candidateToCount.get(candidate) == minCount)
                  .map(String::valueOf)
                  .collect(Collectors.joining()));
      candidates = candidates.replaceAll(pattern, "");
      for (int i = 0; i < ballots.length; ++i) {
        ballots[i] = ballots[i].replaceAll(pattern, "");
      }
    }

    return "";
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String p0, String[] p1, boolean hasAnswer, String p2) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "{");
    for (int i = 0; p1.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p1[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    InstantRunoff obj;
    String answer;
    obj = new InstantRunoff();
    long startTime = System.currentTimeMillis();
    answer = obj.outcome(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p2 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p2);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    String[] p1;
    String p2;

    // ----- test 0 -----
    p0 = "ABC";
    p1 = new String[] {"ACB", "BCA", "ACB", "BCA", "CBA"};
    p2 = "B";
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "DCBA";
    p1 = new String[] {"ACBD", "ACBD", "ACBD", "BCAD", "BCAD", "DBCA", "CBDA"};
    p2 = "B";
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "ACB";
    p1 = new String[] {"ACB", "BCA", "ACB", "BCA", "ACB", "BCA", "CBA", "CAB"};
    p2 = "";
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = "CAB";
    p1 = new String[] {"ACB", "BCA", "ACB", "BCA", "ACB", "BCA", "CAB", "CAB"};
    p2 = "A";
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = "Z";
    p1 = new String[] {"Z"};
    p2 = "Z";
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
