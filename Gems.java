public class Gems {
	static final int[] R_OFFSETS = { 0, 1 };
	static final int[] C_OFFSETS = { 1, 0 };

	public int numMoves(String[] board) {
		int row = board.length;
		int col = board[0].length();

		char[][] cells = new char[row][col];
		for (int r = 0; r < row; ++r) {
			for (int c = 0; c < col; ++c) {
				cells[r][c] = board[r].charAt(c);
			}
		}

		int result = 0;
		for (int r = 0; r < row; ++r) {
			for (int c = 0; c < col; ++c) {
				for (int i = 0; i < R_OFFSETS.length; ++i) {
					int adjR = r + R_OFFSETS[i];
					int adjC = c + C_OFFSETS[i];

					if (adjR < row && adjC < col) {
						swap(cells, r, c, adjR, adjC);

						if (check(cells)) {
							++result;
						}

						swap(cells, r, c, adjR, adjC);
					}
				}
			}
		}

		return result;
	}

	void swap(char[][] cells, int r1, int c1, int r2, int c2) {
		char temp = cells[r1][c1];
		cells[r1][c1] = cells[r2][c2];
		cells[r2][c2] = temp;
	}

	boolean check(char[][] cells) {
		int row = cells.length;
		int col = cells[0].length;

		for (int r = 0; r < row; ++r) {
			for (int c = 0; c < col; ++c) {
				for (int i = 0; i < R_OFFSETS.length; ++i) {
					int maxR = r + 2 * R_OFFSETS[i];
					int maxC = c + 2 * C_OFFSETS[i];

					if (maxR < row && maxC < col && cells[maxR][maxC] == cells[r][c]
							&& cells[r + R_OFFSETS[i]][c + C_OFFSETS[i]] == cells[r][c]) {
						return true;
					}
				}
			}
		}

		return false;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		Gems obj;
		int answer;
		obj = new Gems();
		long startTime = System.currentTimeMillis();
		answer = obj.numMoves(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		int p1;

		// ----- test 0 -----
		p0 = new String[] { "ABC", "ABC", "BAD" };
		p1 = 1;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "ABB", "BAA", "ABB" };
		p1 = 3;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "ABA", "BAB", "ABA" };
		p1 = 4;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "ABC", "DEF", "GHI" };
		p1 = 0;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[] { "SUMEEMEEPGPPG", "USPMIPSUSIISG", "UPSPGEGGPKEII", "KEMGISMKKIUIG", "MGSIIKMSISGKM",
				"SPGMSMIGMSMGM", "SSIIUKMPEPPUI", "UKUIUEMEEIGKE", "IPUPGUSEGSSUS", "EUPMKGGUKKEMI", "PEPSMUUEUSSIP",
				"SUMEEUSESUEKG", "EPSKUISGMSKGI", "IUGGUGGSIGUUP", "IUPIKKSGPPEEP", "KGEESGISPGGEM", "UEIUSSKPSSGPE",
				"KSUMKGEIMKPSE", "ESKEUEMMPPIGG", "UUIEUGGIGMEMK", "GPGMPPIUMEPMU", "IKIGGPIUEMIGS", "IPUSGUMKPKIPP",
				"UEEMUUEEGIPUS", "PPEKIKEMGGMSS", "EMKPMPUUMKEPU", "UKPGPKSUIEUPM", "PSUUMUKGIIPMS", "ESMGSKUEPGGEM",
				"SMEEIKGKGGPEG", "UEIEKPMESMEPP", "IPUIMGGMIPKMG", "ISSEKPKGKIUGU", "SSESKUGKISPUK" };
		p1 = 83;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
