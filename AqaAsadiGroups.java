import java.util.Arrays;

public class AqaAsadiGroups {
	public long minimumDifference(int[] Skills, int k) {
		int N = Skills.length;

		int S = Arrays.stream(Skills).sum();

		int[] prefixSums = new int[N + 1];
		int prefixSum = 0;
		for (int i = 1; i < prefixSums.length; ++i) {
			prefixSum += Skills[i - 1];
			prefixSums[i] = prefixSum;
		}

		long[][] minBads = new long[N + 1][k + 1];
		for (int i = 0; i < minBads.length; ++i) {
			Arrays.fill(minBads[i], Long.MAX_VALUE);
		}
		minBads[0][0] = 0;

		for (int i = 1; i <= N; ++i) {
			for (int j = 1; j <= k; ++j) {
				for (int prevI = 0; prevI <= i; ++prevI) {
					if (minBads[prevI][j - 1] != Long.MAX_VALUE) {
						int d = S - k * (prefixSums[i] - prefixSums[prevI]);
						minBads[i][j] = Math.min(minBads[i][j], minBads[prevI][j - 1] + (long) d * d);
					}
				}
			}
		}

		return minBads[N][k];
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		AqaAsadiGroups obj;
		long answer;
		obj = new AqaAsadiGroups();
		long startTime = System.currentTimeMillis();
		answer = obj.minimumDifference(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int p1;
		long p2;

		// ----- test 0 -----
		p0 = new int[] { 1, 2 };
		p1 = 2;
		p2 = 2L;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 1, 2 };
		p1 = 1;
		p2 = 0L;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 1, 2, 3, 4 };
		p1 = 2;
		p2 = 8L;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 1, 2 };
		p1 = 5;
		p2 = 80L;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
