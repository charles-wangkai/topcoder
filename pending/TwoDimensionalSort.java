import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.IntStream;

public class TwoDimensionalSort {
  static final int SIZE = 26;

  public int[] sortLetters(String[] board) {
    List<Integer> result = new ArrayList<>();
    Map<Character, int[]> rookToPos = new HashMap<>();

    int beginC = 0;
    for (int r = 0; r < SIZE; ++r) {
      int r_ = r;
      int[] rookCs = IntStream.range(0, SIZE).filter(c -> board[r_].charAt(c) != '.').toArray();
      if (rookCs.length != 0) {
        int endC = beginC + rookCs.length - 1;

        int centerIndex = 0;
        while (!check(beginC, endC, rookCs, centerIndex)) {
          ++centerIndex;
        }

        for (int i = centerIndex; i >= 0; --i) {
          result.add(r);
          result.add(rookCs[i]);
          result.add(r);
          result.add(beginC + i);

          rookToPos.put(board[r].charAt(rookCs[i]), new int[] {r, beginC + i});
        }
        for (int i = centerIndex + 1; i < rookCs.length; ++i) {
          result.add(r);
          result.add(rookCs[i]);
          result.add(r);
          result.add(beginC + i);

          rookToPos.put(board[r].charAt(rookCs[i]), new int[] {r, beginC + i});
        }

        beginC = endC + 1;
      }
    }

    for (char rook : rookToPos.keySet()) {
      int[] pos = rookToPos.get(rook);

      result.add(pos[0]);
      result.add(pos[1]);
      result.add(rook - 'A');
      result.add(pos[1]);
    }

    return result.stream().mapToInt(x -> x).toArray();
  }

  boolean check(int beginC, int endC, int[] rookCs, int centerIndex) {
    int target = beginC + centerIndex;

    if (rookCs[centerIndex] < target) {
      return centerIndex + 1 == rookCs.length || rookCs[centerIndex + 1] > target;
    } else if (rookCs[centerIndex] > target) {
      return centerIndex == 0 || rookCs[centerIndex - 1] < target;
    }

    return true;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int[] p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    TwoDimensionalSort obj;
    int[] answer;
    obj = new TwoDimensionalSort();
    long startTime = System.currentTimeMillis();
    answer = obj.sortLetters(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p1.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print(p1[i]);
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(answer[i]);
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p1.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (answer[i] != p1[i]) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    int[] p1;

    // ----- test 0 -----
    p0 =
        new String[] {
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          ".........................."
        };
    p1 = new int[] {};
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 =
        new String[] {
          "..........................",
          "..........................",
          "......B...................",
          "..............Q...........",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          ".........................."
        };
    p1 = new int[] {3, 14, 3, 17};
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 =
        new String[] {
          "..........................",
          "..........................",
          "..........................",
          ".....BCDE.................",
          ".....F....................",
          ".....G.A..................",
          ".....H....................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          ".........................."
        };
    p1 = new int[] {5, 7, 5, 9, 5, 9, 2, 9};
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "..........................",
          "..........................",
          "..........................",
          ".....BCED.................",
          ".....F....................",
          ".....G.A..................",
          ".....H....................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          "..........................",
          ".........................."
        };
    p1 = new int[] {3, 7, 2, 7, 2, 7, 2, 11, 5, 7, 0, 7, 2, 11, 3, 11};
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
