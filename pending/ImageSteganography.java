public class ImageSteganography {
	public String[] encode(String[] image, String message) {
		String[] result = new String[image.length];
		int messageIndex = 0;
		int part = 0;
		for (int i = 0; i < result.length; ++i) {
			StringBuilder line = new StringBuilder();
			for (int j = 0; j < image[i].length(); j += 3) {
				int original = Integer.parseInt(image[i].substring(j, j + 3));
				int encoded = encodeOne(message, messageIndex, part);

				line.append(String.format("%03d", original / 4 * 4 + encoded));

				if (messageIndex != message.length()) {
					++part;
					if (part == 3) {
						part = 0;
						++messageIndex;
					}
				}
			}

			result[i] = line.toString();
		}

		return result;
	}

	int encodeOne(String message, int messageIndex, int part) {
		if (messageIndex == message.length()) {
			return 3;
		}

		char ch = message.charAt(messageIndex);
		int whole;
		if (ch == ' ') {
			whole = 0;
		} else if (Character.isUpperCase(ch)) {
			whole = ch - 'A' + 1;
		} else if (Character.isLowerCase(ch)) {
			whole = ch - 'a' + 27;
		} else {
			whole = ch - '0' + 53;
		}

		if (part == 0) {
			return whole % 4;
		} else if (part == 1) {
			return whole / 4 % 4;
		} else {
			return whole / 16;
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, String p1, boolean hasAnswer, String[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		ImageSteganography obj;
		String[] answer;
		obj = new ImageSteganography();
		long startTime = System.currentTimeMillis();
		answer = obj.encode(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p2[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p2[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		String p1;
		String[] p2;

		// ----- test 0 -----
		p0 = new String[] { "255123212001201222" };
		p1 = "hi";
		p2 = new String[] { "254120214003200222" };
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "255123212", "001201222" };
		p1 = "hi";
		p2 = new String[] { "254120214", "003200222" };
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "123234213001023213123145", "222111121101213198009", "121122123124125", "132212093039",
				"213110" };
		p1 = "Hello 1";
		p2 = new String[] { "120234212003023213122145", "222110121102213198010", "120120120126125", "135215095039",
				"215111" };
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
