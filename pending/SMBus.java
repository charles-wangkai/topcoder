import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class SMBus {
	public int transmitTime(String[] messages, int[] times) {
		int result = 0;
		Set<Integer> restIndices = IntStream.range(0, messages.length).boxed().collect(Collectors.toSet());
		while (!restIndices.isEmpty()) {
			int length = 0;
			Set<Integer> candidates = new HashSet<Integer>(restIndices);
			while (!(candidates.size() == 1 && length == messages[candidates.iterator().next()].length())) {
				result += candidates.stream().mapToInt(candidate -> times[candidate]).max().getAsInt();

				int length_ = length;
				int minCh = candidates.stream().mapToInt(candidate -> messages[candidate].charAt(length_)).min()
						.getAsInt();
				candidates = candidates.stream().filter(candidate -> messages[candidate].charAt(length_) == minCh)
						.collect(Collectors.toSet());

				++length;
			}

			restIndices.remove(candidates.iterator().next());
		}

		return result;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SMBus obj;
		int answer;
		obj = new SMBus();
		long startTime = System.currentTimeMillis();
		answer = obj.transmitTime(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		int[] p1;
		int p2;

		// ----- test 0 -----
		p0 = new String[] { "123", "124", "134" };
		p1 = new int[] { 1, 2, 3 };
		p2 = 25;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "012", "1234", "1233", "1223", "1123" };
		p1 = new int[] { 4, 1, 5, 2, 9 };
		p2 = 94;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "0002019289019101039663222896280025447", "00201873554718989597528841094293294387326",
				"010699029378761", "0110118", "011143279122561420", "001046384966198", "00200570375817801109530240012",
				"0003163277589822", "01100240744590150136673219652442108", "012033596872642679096489479354",
				"0121059494098", "00001002303019117948961792176", "00216399923558", "02014",
				"00224999120803846121427603894967637446889670369", "01101009414735635151893037596051740080475886",
				"0000101211809647472761605153430927981533514", "176845042961739039392207791589",
				"02000047506929386333221966659552927385017901842706", "021001117450487502127241076595509511",
				"021010776262723557108100899515", "0210114830738951774606917781619656", "0211798433083855430",
				"00000005842153604632996228135814", "0001000766929248550736138555144997170272757787",
				"0001010247593342056062432721557", "01100004828618452515832113396660046634951",
				"0132559984733529872911444204991646138116334788", "0224149857349431864906523152249992",
				"00001142929552573133212195441932219", "00110904" + "98947092002457447355036811372647896489218",
				"000001275414757476198997466", "00010014", "00111025861963467834393486017602553072649743", "000102085",
				"00120882661783539", "01100018938145727291185020", "01100191373790478446634214244459341793",
				"0001129060", "001111287431066271555393813846448", "011010160778408696098486370196313",
				"0002125146381515395" };
		p1 = new int[] { 42, 86, 47, 86, 32, 95, 2, 98, 17, 58, 31, 32, 85, 77, 87, 61, 1, 20, 15, 80, 20, 95, 55, 87,
				52, 14, 55, 68, 2, 66, 67, 3, 28, 97, 100, 67, 65, 20, 28, 77, 93, 64 };
		p2 = 71048;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
