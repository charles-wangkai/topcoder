import java.util.PriorityQueue;
import java.util.stream.IntStream;

public class KRectangleIntersection {
	public long maxIntersection(int[] xl, int[] yl, int[] xh, int[] yh, int k) {
		int n = xl.length;

		long result = 0;
		for (int cxl : xl) {
			for (int cxh : xh) {
				if (cxl < cxh) {
					Range[] ranges = IntStream.range(0, n).filter(i -> xl[i] <= cxl && xh[i] >= cxh)
							.mapToObj(i -> new Range(yl[i], yh[i]))
							.sorted((r1, r2) -> Integer.compare(r1.left, r2.left)).toArray(Range[]::new);

					PriorityQueue<Integer> rights = new PriorityQueue<>();
					for (Range range : ranges) {
						rights.offer(range.right);
						if (rights.size() == k + 1) {
							rights.poll();
						}

						if (rights.size() == k) {
							result = Math.max(result, (long) (cxh - cxl) * Math.max(0, rights.peek() - range.left));
						}
					}
				}
			}
		}

		return result;
	}

	class Range {
		int left;
		int right;

		Range(int left, int right) {
			this.left = left;
			this.right = right;
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int[] p2, int[] p3, int p4,
			boolean hasAnswer, long p5) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p3.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p3[i]);
		}
		System.out.print("}" + "," + p4);
		System.out.println("]");
		KRectangleIntersection obj;
		long answer;
		obj = new KRectangleIntersection();
		long startTime = System.currentTimeMillis();
		answer = obj.maxIntersection(p0, p1, p2, p3, p4);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p5);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p5;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int[] p2;
		int[] p3;
		int p4;
		long p5;

		// ----- test 0 -----
		p0 = new int[] { 1, 2, 3 };
		p1 = new int[] { 1, 2, 3 };
		p2 = new int[] { 10, 9, 8 };
		p3 = new int[] { 10, 9, 8 };
		p4 = 2;
		p5 = 49L;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 2, 5, 1 };
		p1 = new int[] { 3, 7, 1 };
		p2 = new int[] { 7, 10, 6 };
		p3 = new int[] { 9, 10, 5 };
		p4 = 2;
		p5 = 8L;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 2, 5, 1 };
		p1 = new int[] { 3, 7, 1 };
		p2 = new int[] { 7, 10, 6 };
		p3 = new int[] { 9, 10, 5 };
		p4 = 1;
		p5 = 30L;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 2, 5, 1 };
		p1 = new int[] { 3, 7, 1 };
		p2 = new int[] { 7, 10, 6 };
		p3 = new int[] { 9, 10, 5 };
		p4 = 3;
		p5 = 0L;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, p4, true, p5) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
