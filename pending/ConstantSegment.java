import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ConstantSegment {
  public int sendSomeHome(int N, int K, int M, int[] Pprefix, int seed) {
    int[] P = generate(N, M, Pprefix, seed);

    int result = Integer.MAX_VALUE;
    Map<Integer, List<Integer>> problemToIndices = new HashMap<>();
    for (int i = 0; i < P.length; ++i) {
      if (!problemToIndices.containsKey(P[i])) {
        problemToIndices.put(P[i], new ArrayList<>());
      }
      problemToIndices.get(P[i]).add(i);

      List<Integer> indices = problemToIndices.get(P[i]);
      if (indices.size() >= K) {
        result = Math.min(result, i - indices.get(indices.size() - K) + 1 - K);
      }
    }

    return (result == Integer.MAX_VALUE) ? -1 : result;
  }

  int[] generate(int N, int M, int[] Pprefix, int seed) {
    int[] P = new int[N];

    int L = Pprefix.length;
    for (int i = 0; i < L; ++i) P[i] = Pprefix[i];

    long state = seed;
    for (int i = L; i < N; ++i) {
      state = (state * 1103515245 + 12345) % (1L << 31);
      P[i] = (int) ((state / 16) % M);
    }

    return P;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int p1, int p2, int[] p3, int p4, boolean hasAnswer, int p5) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + "{");
    for (int i = 0; p3.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p3[i]);
    }
    System.out.print("}" + "," + p4);
    System.out.println("]");
    ConstantSegment obj;
    int answer;
    obj = new ConstantSegment();
    long startTime = System.currentTimeMillis();
    answer = obj.sendSomeHome(p0, p1, p2, p3, p4);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p5);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p5;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;
    int[] p3;
    int p4;
    int p5;

    // ----- test 0 -----
    p0 = 10;
    p1 = 3;
    p2 = 10;
    p3 = new int[] {1, 4, 3, 3, 3, 3, 2, 0, 3, 9};
    p4 = 0;
    p5 = 0;
    all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, p4, true, p5) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 10;
    p1 = 5;
    p2 = 10;
    p3 = new int[] {1, 4, 3, 3, 3, 3, 2, 0, 3, 9};
    p4 = 0;
    p5 = 2;
    all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, p4, true, p5) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 10;
    p1 = 6;
    p2 = 10;
    p3 = new int[] {1, 4, 3, 3, 3, 3, 2, 0, 3, 9};
    p4 = 0;
    p5 = -1;
    all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, p4, true, p5) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 10;
    p1 = 2;
    p2 = 47;
    p3 = new int[] {1, 4, 5, 2, 1, 2, 3, 7, 8, 3};
    p4 = 4747;
    p5 = 1;
    all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, p4, true, p5) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = 20;
    p1 = 3;
    p2 = 10;
    p3 = new int[] {0, 1, 2, 3, 4};
    p4 = 123456789;
    p5 = 9;
    all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, p4, true, p5) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
