import java.util.Arrays;

public class IBEvaluator {
	public int[] getSummary(int[] predictedGrades, int[] actualGrades) {
		int[] counts = new int[7];
		for (int i = 0; i < predictedGrades.length; ++i) {
			++counts[Math.abs(predictedGrades[i] - actualGrades[i])];
		}

		return Arrays.stream(counts).map(count -> count * 100 / predictedGrades.length).toArray();
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		IBEvaluator obj;
		int[] answer;
		obj = new IBEvaluator();
		long startTime = System.currentTimeMillis();
		answer = obj.getSummary(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p2[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int[] p2;

		// ----- test 0 -----
		p0 = new int[] { 1, 5, 7, 3 };
		p1 = new int[] { 3, 5, 4, 5 };
		p2 = new int[] { 25, 0, 50, 25, 0, 0, 0 };
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 1, 1, 1 };
		p1 = new int[] { 5, 6, 7 };
		p2 = new int[] { 0, 0, 0, 0, 33, 33, 33 };
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 3 };
		p1 = new int[] { 3 };
		p2 = new int[] { 100, 0, 0, 0, 0, 0, 0 };
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 1, 5, 3, 5, 6, 4, 2, 5, 7, 6, 5, 2, 3, 4, 1, 4, 6, 5, 4, 7, 6, 6, 1 };
		p1 = new int[] { 5, 1, 3, 2, 6, 4, 1, 7, 5, 2, 7, 4, 2, 6, 5, 7, 3, 1, 4, 6, 3, 1, 7 };
		p2 = new int[] { 17, 13, 21, 17, 21, 4, 4 };
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
