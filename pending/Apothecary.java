import java.util.ArrayList;
import java.util.List;

public class Apothecary {
	public int[] balance(int W) {
		List<Integer> coefs = new ArrayList<>();
		while (W != 0) {
			coefs.add(W % 3);
			W /= 3;
		}

		List<Integer> result = new ArrayList<>();
		int weight = 1;
		for (int i = 0; i < coefs.size(); ++i) {
			int coef = coefs.get(i);
			if (coef == 1) {
				result.add(weight);
			} else if (coef == 2 || coef == 3) {
				if (coef == 2) {
					result.add(-weight);
				}

				if (i + 1 < coefs.size()) {
					coefs.set(i + 1, coefs.get(i + 1) + 1);
				} else {
					coefs.add(1);
				}
			}

			weight *= 3;
		}

		return result.stream().sorted().mapToInt(x -> x).toArray();
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, boolean hasAnswer, int[] p1) {
		System.out.print("Test " + testNum + ": [" + p0);
		System.out.println("]");
		Apothecary obj;
		int[] answer;
		obj = new Apothecary();
		long startTime = System.currentTimeMillis();
		answer = obj.balance(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p1[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p1[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		int[] p1;

		// ----- test 0 -----
		p0 = 17;
		p1 = new int[] { -9, -1, 27 };
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 1;
		p1 = new int[] { 1 };
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 2016;
		p1 = new int[] { -243, -9, 81, 2187 };
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 1000000;
		p1 = new int[] { -531441, -59049, -6561, -243, -27, 1, 81, 729, 2187, 1594323 };
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
