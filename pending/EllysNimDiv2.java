import java.util.Arrays;

public class EllysNimDiv2 {
	static final int LIMIT = 1 << 11;

	public int getMin(int[] A) {
		int[] minSums = new int[LIMIT];
		Arrays.fill(minSums, Integer.MAX_VALUE);
		minSums[0] = 0;

		for (int Ai : A) {
			int[] nextMinSums = new int[LIMIT];
			Arrays.fill(nextMinSums, Integer.MAX_VALUE);

			for (int xor = 0; xor < minSums.length; ++xor) {
				if (minSums[xor] != Integer.MAX_VALUE) {
					for (int delta = 0; Ai + delta < LIMIT; ++delta) {
						int nextXor = xor ^ (Ai + delta);

						nextMinSums[nextXor] = Math.min(nextMinSums[nextXor], minSums[xor] + delta);
					}
				}
			}

			minSums = nextMinSums;
		}

		return minSums[0];
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		EllysNimDiv2 obj;
		int answer;
		obj = new EllysNimDiv2();
		long startTime = System.currentTimeMillis();
		answer = obj.getMin(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int p1;

		// ----- test 0 -----
		p0 = new int[] { 42, 13, 123, 55, 666, 17 };
		p1 = 480;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 1, 1 };
		p1 = 0;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 };
		p1 = 4;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 371, 740, 211, 798, 82, 385, 979, 389, 31, 667, 541, 561, 471 };
		p1 = 42;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new int[] { 769, 727, 657, 924, 879, 674, 652, 995, 947, 896, 869, 553, 954, 974, 681, 768, 913 };
		p1 = 666;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = new int[] { 543, 230, 421, 415, 271, 962, 677, 373, 951, 114, 379, 15, 211, 955, 66, 573, 982, 296, 730,
				591, 750, 877, 224, 186, 398, 84, 542, 770, 288, 78, 373, 417, 476, 968, 564, 565, 740, 377, 633, 287,
				111, 823 };
		p1 = 44;
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------

		// ----- test 6 -----
		p0 = new int[] { 253, 251, 247, 239, 223, 191, 127 };
		p1 = 15;
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
