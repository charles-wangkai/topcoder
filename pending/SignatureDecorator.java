public class SignatureDecorator {
	public String applyDecoration(String name, String[] commands, String[] decorations) {
		for (int i = 0; i < commands.length; ++i) {
			if (commands[i].equals("prepend")) {
				name = String.format("%s%s", decorations[i], name);
			} else if (commands[i].equals("append")) {
				name = String.format("%s%s", name, decorations[i]);
			} else {
				name = String.format("%s%s%s", decorations[i], name, new StringBuilder(decorations[i]).reverse());
			}
		}

		return name;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String[] p1, String[] p2, boolean hasAnswer,
			String p3) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p2[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SignatureDecorator obj;
		String answer;
		obj = new SignatureDecorator();
		long startTime = System.currentTimeMillis();
		answer = obj.applyDecoration(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String p0;
		String[] p1;
		String[] p2;
		String p3;

		// ----- test 0 -----
		p0 = "Bob";
		p1 = new String[] { "surround", "append", "prepend" };
		p2 = new String[] { "-=", "(", ")" };
		p3 = ")-=Bob=-(";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = "Super_Man_01";
		p1 = new String[] {};
		p2 = new String[] {};
		p3 = "Super_Man_01";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = "4BcD3FgHIjklMN0pqrS7uVWxYZ_";
		p1 = new String[] { "append", "prepend", "surround" };
		p2 = new String[] { "`{[(", ")]}'", ",.;<>?:|-=_+!@#$%^&*~" };
		p3 = ",.;<>?:|-=_+!@#$%^&*~)]}'4BcD3FgHIjklMN0pqrS7uVWxYZ_`{[(~*&^%$#@!+_=-|:?><;.,";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = "RacEcaR";
		p1 = new String[] { "surround" };
		p2 = new String[] { "([{/" };
		p3 = "([{/RacEcaR/{[(";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
