import java.util.stream.IntStream;

public class ProgramSchedule {
	public int schedule(int[] A, int[] B) {
		int result = -1;
		int lower = IntStream.range(0, A.length).map(i -> A[i] + B[i]).min().getAsInt();
		int upper = IntStream.range(0, A.length).map(i -> A[i] + B[i]).sum();
		while (lower <= upper) {
			int middle = (lower + upper) / 2;
			if (check(A, B, middle)) {
				result = middle;
				upper = middle - 1;
			} else {
				lower = middle + 1;
			}
		}

		return result;
	}

	boolean check(int[] A, int[] B, int totalTime) {
		int[] bStarts = IntStream.range(0, A.length).map(i -> totalTime - B[i]).toArray();
		int[] sortedIndices = IntStream.range(0, bStarts.length).boxed()
				.sorted((i1, i2) -> Integer.compare(bStarts[i1], bStarts[i2])).mapToInt(x -> x).toArray();
		int sum = 0;
		for (int index : sortedIndices) {
			sum += A[index];
			if (sum > bStarts[index]) {
				return false;
			}
		}

		return true;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		ProgramSchedule obj;
		int answer;
		obj = new ProgramSchedule();
		long startTime = System.currentTimeMillis();
		answer = obj.schedule(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int p2;

		// ----- test 0 -----
		p0 = new int[] { 1, 2, 3, 4 };
		p1 = new int[] { 2, 2, 4, 2 };
		p2 = 12;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 3, 1, 2 };
		p1 = new int[] { 4, 3, 9 };
		p2 = 11;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 1000 };
		p1 = new int[] { 1000 };
		p2 = 2000;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 654, 13, 89, 651, 67, 3, 21, 654, 312 };
		p1 = new int[] { 56, 3, 56, 651, 897, 32, 654, 897, 321 };
		p2 = 2504;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
