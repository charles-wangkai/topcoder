import java.util.stream.IntStream;

public class OneGcd {
	public int[] solve(long[] X, int[] Y) {
		return IntStream.range(0, X.length).map(i -> compute(X[i], Y[i])).toArray();
	}

	int compute(long x, int y) {
		int result = y;
		for (int p2 = (y % 2 == 0) ? 1 : 0; p2 >= 0; --p2) {
			for (int p3 = (y % 3 == 0) ? 1 : 0; p3 >= 0; --p3) {
				for (int p5 = (y % 5 == 0) ? 1 : 0; p5 >= 0; --p5) {
					for (int p7 = (y % 7 == 0) ? 1 : 0; p7 >= 0; --p7) {
						int sign = ((p2 + p3 + p5 + p7) % 2 == 0) ? 1 : -1;
						int base = (p2 == 0 ? 1 : 2) * (p3 == 0 ? 1 : 3) * (p5 == 0 ? 1 : 5) * (p7 == 0 ? 1 : 7);

						if (base != 1) {
							result += sign * computeNum(x, x + y - 1, base);
						}
					}
				}
			}
		}

		return result;
	}

	int computeNum(long begin, long end, int base) {
		return (int) (end / base - divideToCeil(begin, base) + 1);
	}

	long divideToCeil(long a, int b) {
		return (a + b - 1) / b;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long[] p0, int[] p1, boolean hasAnswer, int[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		OneGcd obj;
		int[] answer;
		obj = new OneGcd();
		long startTime = System.currentTimeMillis();
		answer = obj.solve(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p2[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		long[] p0;
		int[] p1;
		int[] p2;

		// ----- test 0 -----
		p0 = new long[] { 5L, 3L };
		p1 = new int[] { 3, 7 };
		p2 = new int[] { 2, 6 };
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new long[] { 10L };
		p1 = new int[] { 15 };
		p2 = new int[] { 8 };
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
