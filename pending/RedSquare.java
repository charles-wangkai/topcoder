public class RedSquare {
	public int countTheEmptyReds(int maxRank, int maxFile, int[] rank, int[] file) {
		boolean[][] pieces = new boolean[maxRank][maxFile];
		for (int i = 0; i < rank.length; ++i) {
			pieces[rank[i] - 1][file[i] - 1] = true;
		}

		int result = 0;
		for (int r = 0; r < maxRank; ++r) {
			for (int c = 0; c < maxFile; ++c) {
				if ((r + c) % 2 != (maxFile - 1) % 2 && !pieces[r][c]) {
					++result;
				}
			}
		}

		return result;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int[] p2, int[] p3, boolean hasAnswer,
			int p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p3.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p3[i]);
		}
		System.out.print("}");
		System.out.println("]");
		RedSquare obj;
		int answer;
		obj = new RedSquare();
		long startTime = System.currentTimeMillis();
		answer = obj.countTheEmptyReds(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		int p1;
		int[] p2;
		int[] p3;
		int p4;

		// ----- test 0 -----
		p0 = 3;
		p1 = 5;
		p2 = new int[] { 1, 2, 2 };
		p3 = new int[] { 4, 1, 2 };
		p4 = 5;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 3;
		p1 = 3;
		p2 = new int[] { 1, 2, 3, 1, 2, 3, 1, 2, 3 };
		p3 = new int[] { 1, 1, 1, 2, 2, 2, 3, 3, 3 };
		p4 = 0;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 5;
		p1 = 5;
		p2 = new int[] { 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5 };
		p3 = new int[] { 2, 4, 1, 3, 5, 2, 4, 1, 3, 5, 2, 4 };
		p4 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 5;
		p1 = 6;
		p2 = new int[] { 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5 };
		p3 = new int[] { 2, 4, 1, 3, 5, 2, 4, 1, 3, 5, 2, 4 };
		p4 = 15;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = 1;
		p1 = 1;
		p2 = new int[] {};
		p3 = new int[] {};
		p4 = 0;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = 50;
		p1 = 50;
		p2 = new int[] { 1 };
		p3 = new int[] { 1 };
		p4 = 1249;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		// ----- test 6 -----
		p0 = 50;
		p1 = 50;
		p2 = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1,
				2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		p3 = new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
				4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 };
		p4 = 1225;
		all_right = KawigiEdit_RunTest(6, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
