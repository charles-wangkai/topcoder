import java.util.ArrayList;
import java.util.List;

public class TaglishTranslator {
	public String translate(String sentence) {
		String[] parts = sentence.split(" ");
		int index = 0;

		List<String> subject = new ArrayList<>();
		if (parts[index].equalsIgnoreCase("the")) {
			subject.add(parts[index]);
			++index;
		}
		subject.add(parts[index]);
		++index;

		List<String> verb = new ArrayList<>();
		if (parts[index].equalsIgnoreCase("will")) {
			verb.add(parts[index]);
			++index;

			verb.add(parts[index]);
			++index;
		} else if (parts[index].length() >= 2
				&& parts[index].substring(parts[index].length() - 2).equalsIgnoreCase("ed")) {
			verb.add(parts[index].substring(0, parts[index].length() - 2));
			verb.add(parts[index].substring(parts[index].length() - 2));

			++index;
		} else {
			verb.add(parts[index]);
			++index;
		}

		List<String> object = new ArrayList<>();
		while (index != parts.length) {
			object.add(parts[index]);
			++index;
		}

		List<String> result = new ArrayList<>();

		if (verb.get(0).equalsIgnoreCase("will")) {
			result.add(String.format("mag%s%s", findFirstSyllable(verb.get(1)), verb.get(1)));
		} else if (verb.size() == 2) {
			result.add(String.format("nag%s", verb.get(0)));
		} else {
			result.add(String.format("nag%s%s", findFirstSyllable(verb.get(0)), verb.get(0)));
		}

		if (subject.size() == 2) {
			result.add("ang");
			result.add(subject.get(1));
		} else {
			result.add("si");
			result.add(subject.get(0));
		}

		if (!object.isEmpty()) {
			if (object.get(0).equalsIgnoreCase("to")) {
				if (object.get(1).equalsIgnoreCase("the")) {
					result.add("sa");
					result.add(object.get(2));
				} else {
					result.add("kay");
					result.add(object.get(1));
				}
			} else {
				if (object.get(0).equalsIgnoreCase("the")) {
					result.add("ng");
					result.add(object.get(1));
				} else {
					result.add("ni");
					result.add(object.get(0));
				}
			}
		}

		return String.join(" ", result);
	}

	String findFirstSyllable(String s) {
		int index = 0;
		while ("aeiou".indexOf(Character.toLowerCase(s.charAt(index))) == -1) {
			++index;
		}

		return s.substring(0, index + 1);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		TaglishTranslator obj;
		String answer;
		obj = new TaglishTranslator();
		long startTime = System.currentTimeMillis();
		answer = obj.translate(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p1 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String p0;
		String p1;

		// ----- test 0 -----
		p0 = "The fox jumps to the dog";
		p1 = "nagjujumps ang fox sa dog";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = "tomek codes";
		p1 = "nagcocodes si tomek";
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = "tHe mAn plAyEd ThE pIAnO";
		p1 = "nagplAy ang mAn ng pIAnO";
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = "Bob will Filed the taxes";
		p1 = "magFiFiled si Bob ng taxes";
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = "Matthew walked to Mathew";
		p1 = "nagwalk si Matthew kay Mathew";
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = "StrongBad kicked TheCheat";
		p1 = "nagkick si StrongBad ni TheCheat";
		all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
		// ------------------

		// ----- test 6 -----
		p0 = "will walked";
		p1 = "nagwalk si will";
		all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
