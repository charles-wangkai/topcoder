import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class WordWrap {
	public String[] justify(String[] lines, int columnWidth) {
		String[] tokens = Arrays.stream(lines).flatMap(line -> Arrays.stream(line.split(" "))).toArray(String[]::new);

		List<String> result = new ArrayList<>();
		StringBuilder current = new StringBuilder();
		for (String token : tokens) {
			if (current.length() + (current.length() == 0 ? 0 : 1) + token.length() <= columnWidth) {
				if (current.length() != 0) {
					current.append(" ");
				}

				current.append(token);
			} else {
				result.add(current.toString());
				current = new StringBuilder(token);
			}
		}

		if (current.length() != 0) {
			result.add(current.toString());
		}

		return result.toArray(new String[0]);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int p1, boolean hasAnswer, String[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		WordWrap obj;
		String[] answer;
		obj = new WordWrap();
		long startTime = System.currentTimeMillis();
		answer = obj.justify(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p2[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p2[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		int p1;
		String[] p2;

		// ----- test 0 -----
		p0 = new String[] { "now is the time for all good men", "to come to the aid of their country" };
		p1 = 20;
		p2 = new String[] { "now is the time for", "all good men to come", "to the aid of their", "country" };
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "now", "is the time for", "all", "good", "men", "to", "come to the aid", "of", "their",
				"country" };
		p1 = 20;
		p2 = new String[] { "now is the time for", "all good men to come", "to the aid of their", "country" };
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "four score and seven years ago", "our fathers brought forth", "upon this continent",
				"a new nation", "conceived in liberty", "and dedicated to the proposition", "that all men are created",
				"equal" };
		p1 = 50;
		p2 = new String[] { "four score and seven years ago our fathers brought",
				"forth upon this continent a new nation conceived", "in liberty and dedicated to the proposition that",
				"all men are created equal" };
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "th e ow l an d th e pu ss yc at", "we nt to se a",
				"on a be au ti fu l pe a gr ee n bo at" };
		p1 = 4;
		p2 = new String[] { "th e", "ow l", "an d", "th e", "pu", "ss", "yc", "at", "we", "nt", "to", "se a", "on a",
				"be", "au", "ti", "fu l", "pe a", "gr", "ee n", "bo", "at" };
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
