import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class GeneralChess {
	public String[] attackPositions(String[] pieces) {
		Set<Point> result = buildAffected(pieces[0]);
		for (int i = 1; i < pieces.length; ++i) {
			result.retainAll(buildAffected(pieces[i]));
		}

		return result.stream()
				.sorted((p1, p2) -> (p1.x != p2.x) ? Integer.compare(p1.x, p2.x) : Integer.compare(p1.y, p2.y))
				.map(p -> String.format("%d,%d", p.x, p.y)).toArray(String[]::new);
	}

	Set<Point> buildAffected(String piece) {
		Point p = new Point(piece);

		return IntStream
				.rangeClosed(-2, 2).boxed().flatMap(dx -> IntStream.rangeClosed(-2, 2)
						.filter(dy -> Math.abs(dx * dy) == 2).mapToObj(dy -> new Point(p.x + dx, p.y + dy)))
				.collect(Collectors.toSet());
	}

	class Point {
		int x;
		int y;

		Point(int x, int y) {
			this.x = x;
			this.y = y;
		}

		Point(String s) {
			String[] parts = s.split(",");
			x = Integer.parseInt(parts[0]);
			y = Integer.parseInt(parts[1]);
		}

		@Override
		public int hashCode() {
			return Objects.hash(x, y);
		}

		@Override
		public boolean equals(Object obj) {
			Point other = (Point) obj;

			return x == other.x && y == other.y;
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		GeneralChess obj;
		String[] answer;
		obj = new GeneralChess();
		long startTime = System.currentTimeMillis();
		answer = obj.attackPositions(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		String[] p1;

		// ----- test 0 -----
		p0 = new String[] { "0,0" };
		p1 = new String[] { "-2,-1", "-2,1", "-1,-2", "-1,2", "1,-2", "1,2", "2,-1", "2,1" };
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "2,1", "-1,-2" };
		p1 = new String[] { "0,0", "1,-1" };
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "0,0", "2,1" };
		p1 = new String[] {};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "-1000,1000", "-999,999", "-999,997" };
		p1 = new String[] { "-1001,998" };
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
