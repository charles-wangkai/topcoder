import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class SubgridsCounter {
	public int howMany(int[] x, int[] y) {
		Set<Point> points = IntStream.range(0, x.length).mapToObj(i -> new Point(x[i], y[i]))
				.collect(Collectors.toSet());

		return points.stream().mapToInt(p1 -> (int) points.stream()
				.filter(p2 -> p1.x == p2.x && p1.y < p2.y && isSubgrid(points, p1, p2.y - p1.y)).count()).sum();
	}

	boolean isSubgrid(Set<Point> points, Point p, int size) {
		return IntStream.range(0, 3).allMatch(
				i -> IntStream.range(0, 3).allMatch(j -> points.contains(new Point(p.x + i * size, p.y + j * size))));
	}

	class Point {
		int x;
		int y;

		Point(int x, int y) {
			this.x = x;
			this.y = y;
		}

		@Override
		public int hashCode() {
			return Objects.hash(x, y);
		}

		@Override
		public boolean equals(Object obj) {
			Point other = (Point) obj;

			return x == other.x && y == other.y;
		}
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SubgridsCounter obj;
		int answer;
		obj = new SubgridsCounter();
		long startTime = System.currentTimeMillis();
		answer = obj.howMany(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int p2;

		// ----- test 0 -----
		p0 = new int[] { 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3 };
		p1 = new int[] { 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3 };
		p2 = 4;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 7, 0, 14, 0, 7, 14, 14, 0, 7 };
		p1 = new int[] { 14, 0, 14, 14, 7, 7, 0, 7, 0 };
		p2 = 1;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 6, 6, 3, 0, 0, 3, 0, 3, 6, 1, 2 };
		p1 = new int[] { 6, 3, 0, 0, 6, 3, 3, 6, 0, 1, 2 };
		p2 = 1;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 6, 0, 4, 0, 20, 0, 0, 4, 12, 6, 6, 12, 12, 6, 0, 12, 4, 6, 4, 4, 20, 20, 20, 6, 6, 4, 20, 4,
				20, 12, 12, 0, 12, 0, 20 };
		p1 = new int[] { 4, 10, 10, 9, 10, 25, 0, 16, 25, 0, 18, 0, 4, 10, 4, 16, 4, 16, 25, 18, 9, 4, 18, 9, 25, 0, 0,
				9, 25, 9, 18, 16, 10, 18, 16 };
		p2 = 1;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new int[] { 18, 9, 3, 9, 24, 8, 16, 12, 20, 12, 24, 3, 16, 0, 15, 24, 6, 0, 0, 20, 4, 16, 20, 15, 12, 16,
				9, 9, 4, 4, 24, 3, 8, 8, 24, 0, 15, 8, 16, 0, 0, 8, 8, 24, 4, 20, 9, 0 };
		p1 = new int[] { 4, 12, 3, 3, 16, 3, 20, 0, 6, 12, 9, 20, 3, 0, 24, 20, 0, 18, 3, 3, 12, 16, 16, 15, 20, 24, 18,
				6, 9, 24, 0, 8, 16, 15, 8, 20, 9, 24, 8, 6, 9, 8, 12, 24, 0, 0, 0, 16 };
		p2 = 1;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
