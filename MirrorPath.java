import java.util.Arrays;

public class MirrorPath {
  static final int[] R_OFFSETS = {-1, 0, 1, 0};
  static final int[] C_OFFSETS = {0, 1, 0, -1};

  public String[] path(String[] map) {
    int row = map.length;
    int col = map[0].length();

    char[][] maze = Arrays.stream(map).map(String::toCharArray).toArray(char[][]::new);
    int r = 0;
    int c = 0;
    while ((r != 0 && r != row - 1 && c != 0 && c != col - 1) || maze[r][c] == '#') {
      ++c;
      if (c == col) {
        ++r;
        c = 0;
      }
    }

    int direction;
    if (r == 0) {
      direction = 2;
    } else if (r == row - 1) {
      direction = 0;
    } else if (c == 0) {
      direction = 1;
    } else {
      direction = 3;
    }

    while (r >= 0 && r < row && c >= 0 && c < col) {
      if (maze[r][c] == '/') {
        if (direction <= 1) {
          direction = 1 - direction;
        } else {
          direction = 5 - direction;
        }
      } else if (maze[r][c] == '`') {
        direction = 3 - direction;
      } else {
        if (R_OFFSETS[direction] == 0) {
          if (maze[r][c] == '.') {
            maze[r][c] = '-';
          } else {
            maze[r][c] = '+';
          }
        } else {
          if (maze[r][c] == '.') {
            maze[r][c] = '|';
          } else {
            maze[r][c] = '+';
          }
        }
      }

      r += R_OFFSETS[direction];
      c += C_OFFSETS[direction];
    }

    return Arrays.stream(maze).map(String::new).toArray(String[]::new);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, boolean hasAnswer, String[] p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    MirrorPath obj;
    String[] answer;
    obj = new MirrorPath();
    long startTime = System.currentTimeMillis();
    answer = obj.path(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p1.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print("\"" + p1[i] + "\"");
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + answer[i] + "\"");
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p1.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (!answer[i].equals(p1[i])) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String[] p1;

    // ----- test 0 -----
    p0 = new String[] {"#.#", "#.#", "#.#"};
    p1 = new String[] {"#|#", "#|#", "#|#"};
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 =
        new String[] {
          "############",
          "#######/....",
          "######//####",
          "#####//#####",
          "####//######",
          "..../#######",
          "############"
        };
    p1 =
        new String[] {
          "############",
          "#######/----",
          "######//####",
          "#####//#####",
          "####//######",
          "----/#######",
          "############"
        };
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new String[] {"#######", "##/..`#", "##.##.#", "##.##.#", "...../#", "##.####", "##.####"};
    p1 = new String[] {"#######", "##/--`#", "##|##|#", "##|##|#", "--+--/#", "##|####", "##|####"};
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "###########.#", "#/........./.", "#.#########.#", "#`........./#", "#############"
        };
    p1 =
        new String[] {
          "###########|#", "#/---------/-", "#|#########|#", "#`---------/#", "#############"
        };
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new String[] {
          "########.##", "#./......`#", "#../.`....#", "#.`...../.#", "#....`.../#", "###.#######"
        };
    p1 =
        new String[] {
          "########|##", "#./-----+`#", "#.|/-`..||#", "#.`+-+--/|#", "#..|.`---/#", "###|#######"
        };
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 =
        new String[] {
          "##.########",
          "#.........#",
          "..`.`.....#",
          "#..`......#",
          "#.`.`.`...#",
          "#....`....#",
          "#...`.`.`.#",
          "#.........#",
          "#.....`./.#",
          "#.........#",
          "###########"
        };
    p1 =
        new String[] {
          "##|########",
          "#.|.......#",
          "--`-`.....#",
          "#.|`|.....#",
          "#.`-`-`...#",
          "#...|`|...#",
          "#...`-`-`.#",
          "#.....|.|.#",
          "#.....`-/.#",
          "#.........#",
          "###########"
        };
    all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
