import java.util.Arrays;
import java.util.stream.IntStream;

public class Hyphenated {
	public double avgLength(String[] lines) {
		int total = Arrays.stream(lines).mapToInt(line -> line.replaceAll("[ .-]", "").length()).sum();
		int count = Arrays.stream(lines)
				.mapToInt(line -> (int) Arrays.stream(line.split("[ .-]")).filter(x -> !x.isEmpty()).count()).sum()
				- (int) IntStream.range(0, lines.length - 1)
						.filter(i -> lines[i].length() >= 2 && lines[i].charAt(lines[i].length() - 1) == '-'
								&& Character.isLetter(lines[i].charAt(lines[i].length() - 2))
								&& Character.isLetter(lines[i + 1].charAt(0)))
						.count();

		return (double) total / count;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, double p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		Hyphenated obj;
		double answer;
		obj = new Hyphenated();
		long startTime = System.currentTimeMillis();
		answer = obj.avgLength(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p1 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p1));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		double p1;

		// ----- test 0 -----
		p0 = new String[] { "  now is the ex-", "ample.  " };
		p1 = 3.75D;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[] { "  now is the ex-", " ample.  " };
		p1 = 3.0D;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[] { "inter-", "national-", "ization.." };
		p1 = 20.0D;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[] { "All the time I have well-defined  ", " trouble." };
		p1 = 4.125D;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[] { "hello-", "-", "-", "-", "great" };
		p1 = 5.0D;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
