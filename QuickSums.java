public class QuickSums {
  int minAdditionNum;

  public int minSums(String numbers, int sum) {
    minAdditionNum = -1;
    search(numbers, sum, 0, 0, 0);

    return minAdditionNum;
  }

  void search(String numbers, int sum, int index, int count, long current) {
    if (index == numbers.length()) {
      if (current == sum && (minAdditionNum == -1 || count - 1 < minAdditionNum)) {
        minAdditionNum = count - 1;
      }

      return;
    }

    for (int i = index; i < numbers.length(); ++i) {
      search(
          numbers,
          sum,
          i + 1,
          count + 1,
          current + Long.parseLong(numbers.substring(index, i + 1)));
    }
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String p0, int p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1);
    System.out.println("]");
    QuickSums obj;
    int answer;
    obj = new QuickSums();
    long startTime = System.currentTimeMillis();
    answer = obj.minSums(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    int p1;
    int p2;

    // ----- test 0 -----
    p0 = "99999";
    p1 = 45;
    p2 = 4;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "1110";
    p1 = 3;
    p2 = 3;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "0123456789";
    p1 = 45;
    p2 = 8;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = "99999";
    p1 = 100;
    p2 = -1;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = "382834";
    p1 = 100;
    p2 = 2;
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = "9230560001";
    p1 = 71;
    p2 = 4;
    all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
