import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class CrossCountry {
	public String scoreMeet(int numTeams, String finishOrder) {
		@SuppressWarnings("unchecked")
		List<Integer>[] placeLists = new List[numTeams];
		for (int i = 0; i < placeLists.length; ++i) {
			placeLists[i] = new ArrayList<>();
		}

		for (int i = 0; i < finishOrder.length(); ++i) {
			placeLists[finishOrder.charAt(i) - 'A'].add(i + 1);
		}

		return IntStream.range(0, placeLists.length).filter(i -> placeLists[i].size() >= 5).boxed().sorted((i1, i2) -> {
			int score1 = computeScore(placeLists[i1]);
			int score2 = computeScore(placeLists[i2]);

			if (score1 != score2) {
				return Integer.compare(score1, score2);
			}

			if (placeLists[i1].size() >= 6 && placeLists[i2].size() >= 6) {
				return Integer.compare(placeLists[i1].get(5), placeLists[i2].get(5));
			}

			if (placeLists[i1].size() >= 6 && placeLists[i2].size() == 5) {
				return -1;
			}
			if (placeLists[i1].size() == 5 && placeLists[i2].size() >= 6) {
				return 1;
			}

			return Integer.compare(i1, i2);
		}).map(i -> String.valueOf((char) (i + 'A'))).collect(Collectors.joining());
	}

	int computeScore(List<Integer> placeList) {
		return placeList.stream().mapToInt(x -> x).limit(5).sum();
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, String p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "\"" + p1 + "\"");
		System.out.println("]");
		CrossCountry obj;
		String answer;
		obj = new CrossCountry();
		long startTime = System.currentTimeMillis();
		answer = obj.scoreMeet(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		String p1;
		String p2;

		// ----- test 0 -----
		p0 = 2;
		p1 = "AABBABBABBA";
		p2 = "AB";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 3;
		p1 = "CCCBBBBBAAACC";
		p2 = "BC";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 4;
		p1 = "ABDCBADBDCCDBCDBCAAAC";
		p2 = "BDCA";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 10;
		p1 = "BDHCEAJBIDBCCHGCBDJEBAAHEGAGGADHGIECJEHAEBDADJCDHG";
		p2 = "BCDAHEG";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = 3;
		p1 = "BABCAABABAB";
		p2 = "AB";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
