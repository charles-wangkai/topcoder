import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class OmahaLow {
	public String low(String sharedCards, String playersCards) {
		sharedCards = sharedCards.replaceAll("[9TJQK]", "");
		playersCards = playersCards.replaceAll("[9TJQK]", "");

		String result = "";
		if (sharedCards.length() >= 3 && playersCards.length() >= 2) {
			for (int i = 0; i < sharedCards.length(); ++i) {
				for (int j = i + 1; j < sharedCards.length(); ++j) {
					for (int k = j + 1; k < sharedCards.length(); ++k) {
						for (int p = 0; p < playersCards.length(); ++p) {
							for (int q = p + 1; q < playersCards.length(); ++q) {
								String hand = Stream
										.of(sharedCards.charAt(i), sharedCards.charAt(j), sharedCards.charAt(k),
												playersCards.charAt(p), playersCards.charAt(q))
										.distinct().sorted(Collections.reverseOrder()).map(String::valueOf)
										.collect(Collectors.joining());

								if (hand.length() == 5 && (result.isEmpty() || hand.compareTo(result) < 0)) {
									result = hand;
								}
							}
						}
					}
				}
			}
		}

		return result;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		OmahaLow obj;
		String answer;
		obj = new OmahaLow();
		long startTime = System.currentTimeMillis();
		answer = obj.low(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String p0;
		String p1;
		String p2;

		// ----- test 0 -----
		p0 = "123QK";
		p1 = "45TJ";
		p2 = "54321";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = "55443";
		p1 = "2345";
		p2 = "";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = "1357Q";
		p1 = "345J";
		p2 = "75431";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = "76285";
		p1 = "4816";
		p2 = "65421";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = "12345";
		p1 = "3339";
		p2 = "";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = "58463";
		p1 = "947K";
		p2 = "76543";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 6 -----
		p0 = "67521";
		p1 = "J859";
		p2 = "86521";
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
