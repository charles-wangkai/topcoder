import java.util.Arrays;

public class FanFailure {
  public int[] getRange(int[] capacities, int minCooling) {
    Arrays.sort(capacities);

    int rest = Arrays.stream(capacities).sum();
    int mfs = 0;
    while (rest - capacities[mfs] >= minCooling) {
      rest -= capacities[mfs];
      ++mfs;
    }

    rest = Arrays.stream(capacities).sum();
    int mfc = 0;
    while (rest - capacities[capacities.length - 1 - mfc] >= minCooling) {
      rest -= capacities[capacities.length - 1 - mfc];
      ++mfc;
    }

    return new int[] {mfs, mfc};
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int[] p0, int p1, boolean hasAnswer, int[] p2) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(p0[i]);
    }
    System.out.print("}" + "," + p1);
    System.out.println("]");
    FanFailure obj;
    int[] answer;
    obj = new FanFailure();
    long startTime = System.currentTimeMillis();
    answer = obj.getRange(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p2.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print(p2[i]);
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print(answer[i]);
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p2.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (answer[i] != p2[i]) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int[] p0;
    int p1;
    int[] p2;

    // ----- test 0 -----
    p0 = new int[] {1, 2, 3};
    p1 = 2;
    p2 = new int[] {2, 1};
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new int[] {8, 5, 6, 7};
    p1 = 22;
    p2 = new int[] {0, 0};
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = new int[] {676, 11, 223, 413, 823, 122, 547, 187, 28};
    p1 = 1000;
    p2 = new int[] {7, 2};
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new int[] {
          955, 96, 161, 259, 642, 242, 772, 369, 311, 785, 92, 991, 620, 394, 128, 774, 973, 94,
          681, 771, 916, 373, 523, 100, 220, 993, 472, 798, 132, 361, 33, 362, 573, 624, 722, 520,
          451, 231, 37, 921, 408, 170, 303, 559, 866, 412, 339, 757, 822, 192
        };
    p1 = 3619;
    p2 = new int[] {46, 30};
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
