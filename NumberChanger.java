import java.util.stream.IntStream;

public class NumberChanger {
	public int transform(String start, String finish) {
		return search(finish, start.toCharArray(), 0, 0);
	}

	int search(String finish, char[] current, int index, int swapCount) {
		if (index == current.length) {
			return swapCount
					+ IntStream.range(0, current.length).map(i -> computeDiff(current[i], finish.charAt(i))).sum();
		}

		int result = Integer.MAX_VALUE;
		for (int i = index; i < current.length; ++i) {
			swap(current, i, index);
			result = Math.min(result, search(finish, current, index + 1, swapCount + (i == index ? 0 : 1)));
			swap(current, i, index);
		}

		return result;
	}

	void swap(char[] c, int index1, int index2) {
		char temp = c[index1];
		c[index1] = c[index2];
		c[index2] = temp;
	}

	int computeDiff(char digit1, char digit2) {
		return (digit1 >= digit2) ? (digit1 - digit2) : (digit2 - digit1);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String p0, String p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
		System.out.println("]");
		NumberChanger obj;
		int answer;
		obj = new NumberChanger();
		long startTime = System.currentTimeMillis();
		answer = obj.transform(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String p0;
		String p1;
		int p2;

		// ----- test 0 -----
		p0 = "01234567";
		p1 = "01234567";
		p2 = 0;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = "11119999";
		p1 = "99991111";
		p2 = 4;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = "55555555";
		p1 = "12345678";
		p2 = 16;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = "77771111";
		p1 = "00446688";
		p2 = 16;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = "12";
		p1 = "30";
		p2 = 3;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
