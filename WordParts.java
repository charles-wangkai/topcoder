import java.util.Arrays;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class WordParts {
  public int partCount(String original, String compound) {
    String[] parts =
        Stream.concat(
                IntStream.rangeClosed(1, original.length()).mapToObj(i -> original.substring(0, i)),
                IntStream.rangeClosed(1, original.length())
                    .mapToObj(i -> original.substring(original.length() - i)))
            .distinct()
            .toArray(String[]::new);

    int[] minPartNums = new int[compound.length() + 1];
    Arrays.fill(minPartNums, Integer.MAX_VALUE);
    minPartNums[0] = 0;

    for (int i = 1; i < minPartNums.length; ++i) {
      for (String part : parts) {
        if (compound.substring(Math.max(0, i - part.length()), i).equals(part)
            && minPartNums[i - part.length()] != Integer.MAX_VALUE) {
          minPartNums[i] = Math.min(minPartNums[i], minPartNums[i - part.length()] + 1);
        }
      }
    }

    return (minPartNums[compound.length()] == Integer.MAX_VALUE)
        ? -1
        : minPartNums[compound.length()];
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String p0, String p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + "\"" + p1 + "\"");
    System.out.println("]");
    WordParts obj;
    int answer;
    obj = new WordParts();
    long startTime = System.currentTimeMillis();
    answer = obj.partCount(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    String p1;
    int p2;

    // ----- test 0 -----
    p0 = "ANTIDISESTABLISHMENTARIANISM";
    p1 = "ANTIDISIANISMISM";
    p2 = 3;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "ANTIDISESTABLISHMENTARIANISM";
    p1 = "ESTABLISHMENT";
    p2 = -1;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "TOPCODERDOTCOM";
    p1 = "TOMTMODERDOTCOM";
    p2 = 5;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = "HELLO";
    p1 = "HELLOHEHELLOLOHELLO";
    p2 = 5;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = "DONTFORGETTHEEMPTYCASE";
    p1 = "";
    p2 = 0;
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = "BAAABA";
    p1 = "BAAABAAA";
    p2 = 2;
    all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 6 -----
    p0 = "ABBBAABABBBAABBABBABABBABAABBAABBBBBABBABABBABAABB";
    p1 = "BBBAABABBBAABBABBABABBABAABBAABBBBBABBABABBABAABAA";
    p2 = 17;
    all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
