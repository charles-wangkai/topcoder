import java.util.stream.IntStream;

public class Cubism {
  static final int SIZE = 4;

  public int lines(String[] lattice, String color) {
    char[][][] cubes = new char[SIZE][SIZE][SIZE];
    for (int x = 0; x < SIZE; ++x) {
      for (int y = 0; y < SIZE; ++y) {
        for (int z = 0; z < SIZE; ++z) {
          cubes[x][y][z] = lattice[x].charAt(y * SIZE + z);
        }
      }
    }

    int result = 0;
    char targetColor = color.equals("black") ? 'B' : 'W';
    for (int x = 0; x < SIZE; ++x) {
      for (int y = 0; y < SIZE; ++y) {
        for (int z = 0; z < SIZE; ++z) {
          for (int dx = -1; dx <= 1; ++dx) {
            for (int dy = -1; dy <= 1; ++dy) {
              for (int dz = -1; dz <= 1; ++dz) {
                int x_ = x;
                int y_ = y;
                int z_ = z;
                int dx_ = dx;
                int dy_ = dy;
                int dz_ = dz;
                if ((dx != 0 || dy != 0 || dz != 0)
                    && x + dx * (SIZE - 1) >= 0
                    && x + dx * (SIZE - 1) < SIZE
                    && y + dy * (SIZE - 1) >= 0
                    && y + dy * (SIZE - 1) < SIZE
                    && z + dz * (SIZE - 1) >= 0
                    && z + dz * (SIZE - 1) < SIZE
                    && IntStream.range(0, SIZE)
                        .allMatch(
                            i -> cubes[x_ + dx_ * i][y_ + dy_ * i][z_ + dz_ * i] == targetColor)) {
                  ++result;
                }
              }
            }
          }
        }
      }
    }
    result /= 2;

    return result;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, String p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}" + "," + "\"" + p1 + "\"");
    System.out.println("]");
    Cubism obj;
    int answer;
    obj = new Cubism();
    long startTime = System.currentTimeMillis();
    answer = obj.lines(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String p1;
    int p2;

    // ----- test 0 -----
    p0 =
        new String[] {
          "BBBBBWWWBWWWBWWW", "BWWWWWWWWWWWWWWW", "BWWWWWWWWWWWWWWW", "BWWWWWWWWWWWWWWW"
        };
    p1 = "black";
    p2 = 3;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 =
        new String[] {
          "BWWWWWWWWWWWWWWW", "WWWWWBWWWWWWWWWW", "WWWWWWWWWWBWWWWW", "WWWWWWWWWWWWWWWB"
        };
    p1 = "black";
    p2 = 1;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 =
        new String[] {
          "WWWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWWW"
        };
    p1 = "black";
    p2 = 0;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "WWWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWWW", "WWWWWWWWWWWWWWWW"
        };
    p1 = "white";
    p2 = 76;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new String[] {
          "WWWWWWWWWBWWWWWW", "WWWBWWWWWWWWWWWW", "WWWWWWWWWWWWBWWW", "WWWBWWWWWWWWWWWW"
        };
    p1 = "white";
    p2 = 58;
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 =
        new String[] {
          "BWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBW", "BWBWBWBWBWBWBWBW"
        };
    p1 = "white";
    p2 = 20;
    all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
