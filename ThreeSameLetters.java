public class ThreeSameLetters {
  static final int MODULUS = 1_000_000_007;

  public int countStrings(int L, int S) {
    int[][][] dp = new int[2][S + 1][4];
    dp[0][0][1] = 1;

    for (int length = 0; length < L; ++length) {
      int[][][] nextDp = new int[2][S + 1][4];
      for (int i = 0; i < 2; ++i) {
        for (int j = 0; j <= S; ++j) {
          for (int k = 1; k < 4; ++k) {
            for (int nextJ = 1; nextJ <= S; ++nextJ) {
              int nextK = (nextJ == j) ? (k + 1) : 1;
              int nextI = i + ((nextK >= 3) ? 1 : 0);
              if (nextI != 2 && nextK != 4) {
                nextDp[nextI][nextJ][nextK] = addMod(nextDp[nextI][nextJ][nextK], dp[i][j][k]);
              }
            }
          }
        }
      }

      dp = nextDp;
    }

    int result = 0;
    for (int i = 1; i <= S; ++i) {
      for (int j = 1; j < 4; ++j) {
        result = addMod(result, dp[1][i][j]);
      }
    }

    return result;
  }

  int addMod(int x, int y) {
    return Math.floorMod(x + y, MODULUS);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, int p0, int p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
    System.out.println("]");
    ThreeSameLetters obj;
    int answer;
    obj = new ThreeSameLetters();
    long startTime = System.currentTimeMillis();
    answer = obj.countStrings(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    int p0;
    int p1;
    int p2;

    // ----- test 0 -----
    p0 = 3;
    p1 = 7;
    p2 = 7;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = 4;
    p1 = 2;
    p2 = 4;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = 2;
    p1 = 17;
    p2 = 0;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = 10;
    p1 = 11;
    p2 = 410199993;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
