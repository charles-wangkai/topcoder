import java.util.stream.IntStream;

public class TrivialWordSearch {
  public String[] construct(String w) {
    int length = w.length();

    if (length == 2 || (length >= 3 && w.chars().distinct().count() == 1)) {
      return new String[0];
    }

    char filled =
        (length == 1 || w.charAt(length - 1) == w.charAt(length - 2))
            ? w.charAt(0)
            : w.charAt(length - 1);

    return IntStream.range(0, length)
        .mapToObj(i -> (i == 0) ? w : String.valueOf(filled).repeat(length))
        .toArray(String[]::new);
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String p0, boolean hasAnswer, String[] p1) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
    System.out.println("]");
    TrivialWordSearch obj;
    String[] answer;
    obj = new TrivialWordSearch();
    long startTime = System.currentTimeMillis();
    answer = obj.construct(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.print("\t" + "{");
      for (int i = 0; p1.length > i; ++i) {
        if (i > 0) {
          System.out.print(",");
        }
        System.out.print("\"" + p1[i] + "\"");
      }
      System.out.println("}");
    }
    System.out.println("Your answer:");
    System.out.print("\t" + "{");
    for (int i = 0; answer.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + answer[i] + "\"");
    }
    System.out.println("}");
    if (hasAnswer) {
      if (answer.length != p1.length) {
        res = false;
      } else {
        for (int i = 0; answer.length > i; ++i) {
          if (!answer[i].equals(p1[i])) {
            res = false;
          }
        }
      }
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    String[] p1;

    // ----- test 0 -----
    p0 = "DOG";
    p1 = new String[] {"DGOODDO", "DODGOGG", "DGOODDD", "GOOGDGO", "GOGGOGD", "DOOGDOO", "OOGGOOD"};
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "ABBA";
    p1 = new String[] {"BABA", "AABB", "ABAA", "ABAB"};
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "TOPCODER";
    p1 =
        new String[] {
          "TOPTOPTOPTOP",
          "TOPTORTOPTOP",
          "TOPTOETOPTOP",
          "TOPTODTOPTOP",
          "TOPTOOTOPTOP",
          "TOPTOCTOPTOP",
          "TOPTOPTOPTOP",
          "TOPTOOTOPTOP",
          "TOPTOTTOPTOP",
          "TOPTOPTOPTOP",
          "TOPTOPTOPOOP",
          "TOPTOPTOPTOP"
        };
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = "XXXXX";
    p1 = new String[] {};
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = "E";
    p1 = new String[] {"E"};
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
