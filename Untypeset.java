import java.util.stream.IntStream;

public class Untypeset {
  public int evaluate(String[] expression) {
    return eval(expression, 0, expression.length - 1, 0, expression[0].length() - 1);
  }

  int eval(String[] expression, int minR, int maxR, int minC, int maxC) {
    if (IntStream.rangeClosed(minC, maxC).allMatch(c -> expression[minR].charAt(c) == ' ')) {
      return eval(expression, minR + 1, maxR, minC, maxC);
    }
    if (IntStream.rangeClosed(minC, maxC).allMatch(c -> expression[maxR].charAt(c) == ' ')) {
      return eval(expression, minR, maxR - 1, minC, maxC);
    }
    if (IntStream.rangeClosed(minR, maxR).allMatch(r -> expression[r].charAt(minC) == ' ')) {
      return eval(expression, minR, maxR, minC + 1, maxC);
    }
    if (IntStream.rangeClosed(minR, maxR).allMatch(r -> expression[r].charAt(maxC) == ' ')) {
      return eval(expression, minR, maxR, minC, maxC - 1);
    }

    for (int c = minC + 1; c < maxC; ++c) {
      if (isPlus(expression, minR, maxR, c)) {
        return eval(expression, minR, maxR, minC, c - 1)
            + eval(expression, minR, maxR, c + 1, maxC);
      }
    }

    if (minR == maxR) {
      return Integer.parseInt(expression[minR].substring(minC, maxC + 1));
    }

    for (int r = minR + 1; ; ++r) {
      if (isDiv(expression, minC, maxC, r)) {
        return eval(expression, minR, r - 1, minC, maxC)
            / eval(expression, r + 1, maxR, minC, maxC);
      }
    }
  }

  boolean isDiv(String[] expression, int minC, int maxC, int r) {
    return IntStream.rangeClosed(minC, maxC).allMatch(c -> expression[r].charAt(c) == '-');
  }

  boolean isPlus(String[] expression, int minR, int maxR, int c) {
    int countPlus = 0;
    for (int r = minR; r <= maxR; ++r) {
      char ch = expression[r].charAt(c);
      if (ch == '+') {
        ++countPlus;
      } else if (ch != ' ') {
        return false;
      }
    }

    return countPlus == 1;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    Untypeset obj;
    int answer;
    obj = new Untypeset();
    long startTime = System.currentTimeMillis();
    answer = obj.evaluate(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p1);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p1;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    int p1;

    // ----- test 0 -----
    p0 = new String[] {"2801"};
    p1 = 2801;
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = new String[] {"  625       ", "------------", "        5   "};
    p1 = 125;
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 =
        new String[] {
          "       ", "500    ", "       ", "    +  ", "       ", "       ", "      1", "       ",
          "       "
        };
    p1 = 501;
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "   120   ", "  -----  ", "    10   ", "---------", "    6    ", "   ---   ", "    2    "
        };
    p1 = 4;
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 =
        new String[] {
          "       24       ",
          " 31 + ----      ",
          "       12   + 16",
          "-----------     ",
          "   5 + 6        "
        };
    p1 = 19;
    all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
    // ------------------

    // ----- test 5 -----
    p0 = new String[] {"3 + 4 + 6"};
    p1 = 13;
    all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
    // ------------------

    // ----- test 6 -----
    p0 = new String[] {" 1     4     9 ", "--- + --- + ---", " 1     2     3 "};
    p1 = 6;
    all_right = KawigiEdit_RunTest(6, p0, true, p1) && all_right;
    // ------------------

    // ----- test 7 -----
    p0 =
        new String[] {
          "34      ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "   +    ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "        ",
          "     924"
        };
    p1 = 958;
    all_right = KawigiEdit_RunTest(7, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
