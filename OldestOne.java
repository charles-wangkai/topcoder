public class OldestOne {
  public String oldest(String[] data) {
    int maxAge = -1;
    String result = null;
    for (String s : data) {
      int ageBeginIndex = 0;
      while (!Character.isDigit(s.charAt(ageBeginIndex))) {
        ++ageBeginIndex;
      }

      int age = Integer.parseInt(s.substring(ageBeginIndex, s.indexOf(' ', ageBeginIndex)));
      if (age > maxAge) {
        maxAge = age;
        result = s.substring(0, ageBeginIndex).trim();
      }
    }

    return result;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String[] p0, boolean hasAnswer, String p1) {
    System.out.print("Test " + testNum + ": [" + "{");
    for (int i = 0; p0.length > i; ++i) {
      if (i > 0) {
        System.out.print(",");
      }
      System.out.print("\"" + p0[i] + "\"");
    }
    System.out.print("}");
    System.out.println("]");
    OldestOne obj;
    String answer;
    obj = new OldestOne();
    long startTime = System.currentTimeMillis();
    answer = obj.oldest(p0);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + "\"" + p1 + "\"");
    }
    System.out.println("Your answer:");
    System.out.println("\t" + "\"" + answer + "\"");
    if (hasAnswer) {
      res = answer.equals(p1);
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String[] p0;
    String p1;

    // ----- test 0 -----
    p0 = new String[] {"DOUG JONES 22 213 ALDEN LANE", "   BOB     A SMITH  102 CLARK ST"};
    p1 = "BOB     A SMITH";
    all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 =
        new String[] {
          "DOUG JONES 102 213 ALDEN LANE", "   BOB     A SMITH  102 CLARK ST", "A 1 999ELM"
        };
    p1 = "DOUG JONES";
    all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 =
        new String[] {
          "DOUG JONES 122 213 ALDEN LANE", "   BOB     A SMITH  102 CLARK ST", "A 199 ELM"
        };
    p1 = "A";
    all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 =
        new String[] {
          "   DOUG                 JONES   122 213 ALDEN LANE",
          "   BOB     A SMITH                       102  3",
          " J O H N N Y           199 ELM"
        };
    p1 = "J O H N N Y";
    all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
