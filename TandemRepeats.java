import java.util.stream.IntStream;

public class TandemRepeats {
  public int maxLength(String dna, int k) {
    int result = 0;
    for (int beginIndex = 0; beginIndex < dna.length(); ++beginIndex) {
      for (int length = 1; beginIndex + 2 * length <= dna.length(); ++length) {
        int beginIndex_ = beginIndex;
        int length_ = length;
        if (IntStream.range(0, length)
                .filter(i -> dna.charAt(beginIndex_ + i) != dna.charAt(beginIndex_ + length_ + i))
                .count()
            <= k) {
          result = Math.max(result, length);
        }
      }
    }

    return result;
  }

  // BEGIN KAWIGIEDIT TESTING
  // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
  private static boolean KawigiEdit_RunTest(
      int testNum, String p0, int p1, boolean hasAnswer, int p2) {
    System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"" + "," + p1);
    System.out.println("]");
    TandemRepeats obj;
    int answer;
    obj = new TandemRepeats();
    long startTime = System.currentTimeMillis();
    answer = obj.maxLength(p0, p1);
    long endTime = System.currentTimeMillis();
    boolean res;
    res = true;
    System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
    if (hasAnswer) {
      System.out.println("Desired answer:");
      System.out.println("\t" + p2);
    }
    System.out.println("Your answer:");
    System.out.println("\t" + answer);
    if (hasAnswer) {
      res = answer == p2;
    }
    if (!res) {
      System.out.println("DOESN'T MATCH!!!!");
    } else if ((endTime - startTime) / 1000.0 >= 2) {
      System.out.println("FAIL the timeout");
      res = false;
    } else if (hasAnswer) {
      System.out.println("Match :-)");
    } else {
      System.out.println("OK, but is it right?");
    }
    System.out.println("");
    return res;
  }

  public static void main(String[] args) {
    boolean all_right;
    all_right = true;

    String p0;
    int p1;
    int p2;

    // ----- test 0 -----
    p0 = "GATCATCA";
    p1 = 0;
    p2 = 3;
    all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 1 -----
    p0 = "GATCATGA";
    p1 = 1;
    p2 = 3;
    all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 2 -----
    p0 = "GATCATGA";
    p1 = 0;
    p2 = 0;
    all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 3 -----
    p0 = "AGAGAAAGAA";
    p1 = 3;
    p2 = 5;
    all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
    // ------------------

    // ----- test 4 -----
    p0 = "ATTAGCATTGCACACCTTGAGGACTTAGACAAACCTAGTACACAGGTGTA";
    p1 = 5;
    p2 = 11;
    all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
    // ------------------

    if (all_right) {
      System.out.println("You're a stud (at least on the example cases)!");
    } else {
      System.out.println("Some of the test cases had errors.");
    }
  }
  // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
