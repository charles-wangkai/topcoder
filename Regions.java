public class Regions {
	static int LIMIT = 2_000_000_000;

	public int numTaxes(int[] row, int[] col) {
		long result = 0;
		for (int i = 0; i < row.length - 1; ++i) {
			result += computeTaxNum(Math.abs(row[i] - row[i + 1]), Math.abs(col[i] - col[i + 1]));
		}

		return (result > LIMIT) ? -1 : (int) result;
	}

	int computeTaxNum(int rowDiff, int colDiff) {
		int g = gcd(rowDiff, colDiff);
		rowDiff /= g;
		colDiff /= g;

		return g * (rowDiff + colDiff - ((rowDiff % 2 != 0 && colDiff % 2 != 0) ? 1 : 0));
	}

	int gcd(int x, int y) {
		if (x == 0 && y == 0) {
			return 1;
		}

		return (y == 0) ? x : gcd(y, x % y);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		Regions obj;
		int answer;
		obj = new Regions();
		long startTime = System.currentTimeMillis();
		answer = obj.numTaxes(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int p2;

		// ----- test 0 -----
		p0 = new int[] { 4, 2, 3 };
		p1 = new int[] { 4, 2, 6 };
		p2 = 7;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 0, 1000000000, 0 };
		p1 = new int[] { 0, 1000000000, 0 };
		p2 = 2000000000;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 0, 10, 10 };
		p1 = new int[] { 0, 2, 2 };
		p2 = 10;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 0, 1000000000, 6 };
		p1 = new int[] { 0, 999999999, 18 };
		p2 = -1;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new int[] { 999999999, 1, 999999999, 999999999 };
		p1 = new int[] { 1, 1, 1, 6 };
		p2 = -1;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = new int[] { 345111111, 100234567, 123456, 654321 };
		p1 = new int[] { 251435123, 412345123, 341235643, 123123123 };
		p2 = 795650520;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
