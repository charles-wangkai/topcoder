import java.util.Arrays;
import java.util.stream.IntStream;

public class PayBill {
	public int[] whoPaid(int[] meals, int totalMoney) {
		long[] people = new long[totalMoney + 1];
		Arrays.fill(people, -1);
		people[0] = 0;

		for (int i = 0; i < meals.length; ++i) {
			long[] nextPeople = Arrays.copyOf(people, people.length);
			for (int j = 0; j + meals[i] < nextPeople.length; ++j) {
				if (people[j] != -1) {
					nextPeople[j + meals[i]] = people[j] + (1L << i);
				}
			}

			people = nextPeople;
		}

		long[] people_ = people;
		return IntStream.range(0, meals.length).filter(i -> (people_[totalMoney] & (1L << i)) != 0).toArray();
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, boolean hasAnswer, int[] p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		PayBill obj;
		int[] answer;
		obj = new PayBill();
		long startTime = System.currentTimeMillis();
		answer = obj.whoPaid(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p2.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p2[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p2.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (answer[i] != p2[i]) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int p1;
		int[] p2;

		// ----- test 0 -----
		p0 = new int[] { 1000, 1200, 1300 };
		p1 = 2500;
		p2 = new int[] { 1, 2 };
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 100, 200, 350 };
		p1 = 300;
		p2 = new int[] { 0, 1 };
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 150, 200, 350, 400 };
		p1 = 900;
		p2 = new int[] { 0, 2, 3 };
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 6584, 6733, 6018, 5840, 2723, 4902, 4260, 5375, 6745, 1234, 3000, 8222, 2472, 4348, 1716, 9995,
				415, 1234, 2345, 5679 };
		p1 = 70630;
		p2 = new int[] { 0, 1, 3, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 17, 19 };
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new int[] { 9560, 6506, 597, 415, 4067, 5665, 7585, 8551, 4846, 263, 5486, 2275, 3902, 4915, 8570, 4393,
				5940, 6126, 5457, 4672, 4781, 3064, 6767, 6877, 2261, 843, 5279, 8295, 9639, 6306, 8587, 1772, 1508,
				6309, 4255, 240, 2193, 8495, 7474, 3749, 4663, 4582, 1219, 9004, 1938 };
		p1 = 6642;
		all_right = KawigiEdit_RunTest(4, p0, p1, false, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
